(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{441:function(t,e,s){"use strict";s.r(e);var a=s(25),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#tree-shaking-原理"}},[t._v("tree-shaking 原理")])]),e("li",[e("a",{attrs:{href:"#哪些代码会被shaking"}},[t._v("哪些代码会被shaking")])])])]),e("p"),t._v(" "),e("h1",{attrs:{id:"webpack中的tree-shaking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack中的tree-shaking"}},[t._v("#")]),t._v(" webpack中的tree-shaking")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("tree-shaking")]),t._v(" "),e("p",[e("code",[t._v("tree-shaking")]),t._v("通常用来描述移除"),e("code",[t._v("JS")]),t._v("上下文中未被引用的代码。\n它依赖于"),e("code",[t._v("ES6 module（ES2015模块化）")]),t._v("语法的"),e("code",[t._v("静态结构")]),t._v("的特性。"),e("code",[t._v("tree-shaking")]),t._v("源自于"),e("code",[t._v("rollup")]),t._v("\n借于"),e("code",[t._v("ES6 module")]),t._v("的静态分析，"),e("code",[t._v("tree-shaking")]),t._v("的实现才能成为可能。\n在webpack中，"),e("code",[t._v("tree-shaking")]),t._v("指的就是按需加载，即没有被引用的模块在打包时不会被打包进来，减少我们的包大小，缩小应用的加载时间，呈现给用户更佳的体验")])]),t._v(" "),e("h2",{attrs:{id:"tree-shaking-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking-原理"}},[t._v("#")]),t._v(" tree-shaking 原理")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("原理")]),t._v(" "),e("p",[e("code",[t._v("tree-shaking")]),t._v("更关注于消除无用的模块，消除那些引用了但并没有被使用的模块。\n"),e("code",[t._v("ES6 module")]),t._v("依赖关系是确定的，和运行时的状态无关，可以进行可靠的静态分析，这就是"),e("code",[t._v("tree-shaking")]),t._v("的基础\n所谓静态分析就是不执行代码，从字面量上对代码进行分析，故而可以在编译时正确判断需要加载哪些代码，哪些代码需要删除。ES6之前的模块化，比如我们可以动态"),e("code",[t._v("require")]),t._v("一个模块，只有执行后才知道引用的什么模块，"),e("code",[t._v("require")]),t._v("语法就无法通过静态分析去做优化。")])]),t._v(" "),e("h2",{attrs:{id:"哪些代码会被shaking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哪些代码会被shaking"}},[t._v("#")]),t._v(" 哪些代码会被shaking")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("ul",[e("li",[t._v("1、没有被导入或使用的代码")]),t._v(" "),e("li",[t._v("2、代码执行的结果不会被用到")]),t._v(" "),e("li",[t._v("3、代码没有被执行，或者不可到达（条件为false中的代码）")]),t._v(" "),e("li",[t._v("4、代码中只写不读的变量。")])]),t._v(" "),e("p",[t._v("有副作用的未被引用的函数无法被shaking掉（解决办法是将自己认为没有副作用的函数前面用/"),e("em",[t._v("@"),e("strong",[t._v("PURE")])]),t._v("/声明）\nhttps://segmentfault.com/a/1190000012794598")])])])}),[],!1,null,null,null);e.default=v.exports}}]);