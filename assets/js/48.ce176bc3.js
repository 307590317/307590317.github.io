(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{363:function(t,s,a){"use strict";a.r(s);var n=a(25),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#函数自带属性"}},[t._v("函数自带属性")])]),s("li",[s("a",{attrs:{href:"#call-apply-bind"}},[t._v("call apply bind")])]),s("li",[s("a",{attrs:{href:"#函数的核心原理"}},[t._v("函数的核心原理")]),s("ul",[s("li",[s("a",{attrs:{href:"#栈内存"}},[t._v("栈内存")])]),s("li",[s("a",{attrs:{href:"#堆内存"}},[t._v("堆内存")])]),s("li",[s("a",{attrs:{href:"#定义变量的时候带var和不带var的区别"}},[t._v("定义变量的时候带var和不带var的区别?")])]),s("li",[s("a",{attrs:{href:"#普通函数执行步骤"}},[t._v("普通函数执行步骤")])]),s("li",[s("a",{attrs:{href:"#变量提升"}},[t._v("变量提升")])]),s("li",[s("a",{attrs:{href:"#作用域"}},[t._v("作用域")])]),s("li",[s("a",{attrs:{href:"#词法作用域"}},[t._v("词法作用域")])]),s("li",[s("a",{attrs:{href:"#作用域链"}},[t._v("作用域链")])]),s("li",[s("a",{attrs:{href:"#作用域是否销毁"}},[t._v("作用域是否销毁")])]),s("li",[s("a",{attrs:{href:"#垃圾清除机制"}},[t._v("垃圾清除机制")])]),s("li",[s("a",{attrs:{href:"#函数存在了多面性"}},[t._v("函数存在了多面性")])]),s("li",[s("a",{attrs:{href:"#普通函数执行和构造函数执行的区别"}},[t._v("普通函数执行和构造函数执行的区别")])]),s("li",[s("a",{attrs:{href:"#阿里面试题执行顺序总结"}},[t._v("阿里面试题执行顺序总结")])])])]),s("li",[s("a",{attrs:{href:"#闭包"}},[t._v("闭包")]),s("ul",[s("li",[s("a",{attrs:{href:"#如果我想在外部使用闭包中的值怎么办"}},[t._v("如果我想在外部使用闭包中的值怎么办？")])]),s("li",[s("a",{attrs:{href:"#闭包的作用"}},[t._v("闭包的作用")])])])]),s("li",[s("a",{attrs:{href:"#i-与-i的区别"}},[t._v("i++与++i的区别：")])]),s("li",[s("a",{attrs:{href:"#函数的中的-this-指向问题"}},[t._v("函数的中的 this 指向问题")])]),s("li",[s("a",{attrs:{href:"#arguments实参集合"}},[t._v("arguments实参集合")])]),s("li",[s("a",{attrs:{href:"#js中函数的返回值-return"}},[t._v("JS中函数的返回值return")])]),s("li",[s("a",{attrs:{href:"#具名函数表达式"}},[t._v("具名函数表达式")])]),s("li",[s("a",{attrs:{href:"#js中的匿名函数"}},[t._v("JS中的匿名函数")])])])]),s("p"),t._v(" "),s("h1",{attrs:{id:"_12、函数数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、函数数据类型"}},[t._v("#")]),t._v(" 12、函数数据类型")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("函数")]),t._v(" "),s("p",[t._v("函数：具备一定功能的方法；\n"),s("em",[t._v("创建函数:")]),t._v('\n1、声明一个函数名（函数用function，变量用var）\n2、开辟一个新的内存空间（有一个16进制的地址），然后把函数体中实现功能的JS代码按照"字符串"的格式存储在内存中\n3、把空间地址赋值给函数名，此时函数名就可以和函数体本身关联到一起了；')]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" 函数名（）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("函数体")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("实现某一功能的"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("代码\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("em",[t._v("函数执行:")]),t._v("\n1、函数执行的时候会形成一个私有的作用域，提供一个环境供函数体中的代码执行；\n2、把创建的时候存储的字符串变为真正的JS代码，在私有作用域中自上而下执行\n"),s("img",{attrs:{src:t.$withBase("/assets/js-12-1.png"),alt:"js-12-1"}})]),t._v(" "),s("p",[s("em",[t._v("注意:")]),t._v(" 一个函数可以被执行N次，每一次执行相互之间互不干扰（后面会说明两者之间建立的间接关系）\n形参：形式参数（变量），函数的入口，形参也相当于创建了一个私有变量\n实参：函数执行传递给函数的具体值就是实参")])]),t._v(" "),s("h2",{attrs:{id:"函数自带属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数自带属性"}},[t._v("#")]),t._v(" 函数自带属性")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("函数也是对象，也会有一些天生自带的属性")]),t._v(" "),s("p",[s("code",[t._v("length")]),t._v("：0\t形参的个数\n"),s("code",[t._v("name")]),t._v('："Fn"\t函数名\n'),s("code",[t._v("prototype")]),t._v("：类的原型，在原型上定义的方法都是当前Fn这个类实例的公\t\t\t\n有方法\n"),s("code",[t._v("__proto__")]),t._v("：把函数当做一个普通的对象，指向Function这个类的原型")])]),t._v(" "),s("h2",{attrs:{id:"call-apply-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call-apply-bind"}},[t._v("#")]),t._v(" "),s("code",[t._v("call")]),t._v(" "),s("code",[t._v("apply")]),t._v(" "),s("code",[t._v("bind")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("call")])]),t._v(" "),s("p",[s("code",[t._v("fn.call(context,para1,…)")])]),t._v(" "),s("p",[s("em",[t._v("在借用数组原型上的方法把类数组转化为数组的时候，IE低版本浏览器中，元素集合或者节点集合这些类数组是无法借用slice转换的会报错“不是js对象”；")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5版")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_call")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n  ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_thisFn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从索引为1开始，取参数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arguments['")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ctx._thisFn('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_thisFn\n  retrun  res\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6版")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_call")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、给 context 默认值 一般是 window")]),t._v("\n  context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、生成一个context没有的属性名fn，把当前调用的函数this 作为一个属性fn挂到context")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、调用context[fn](...args)并传入参数，此时fn(当前调用函数)中的this就替换为了context")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、删除属性，返回结果")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\nfn1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("把方法执行，并且让方法中的this改变为context，都是给fn传递的实参")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非严格模式下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不传递参数时默认为window")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递null也为window")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递undefined也为window")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//JS严格模式下")]),t._v("\n如果不传则默认为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n传的话传的是什么就修改为什么；\n")])])]),s("blockquote",[s("p",[s("code",[t._v("apply")])]),t._v(" "),s("p",[t._v("apply的语法和call基本一致，作用原理也基本一致，唯一的区别：apply把传递给函数的实参以数组形式存放（但是也相当于在给函数一个个的传递实参值）")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_apply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n  ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_thisFn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  args "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vaules "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    vaules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'args['")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("']'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ctx._thisFn('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" vaules "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_thisFn\n  retrun  res\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_apply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、给 context 默认值 一般是 window")]),t._v("\n  context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、生成一个context没有的属性名fn，把当前调用的函数this 作为一个属性fn挂到context")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、调用context[fn](...args)并传入参数，此时fn(当前调用函数)中的this就替换为了context")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、删除属性，返回结果")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("bind")]),t._v("（bind方法返回的是一个新的函数和原函数空间地址不同）")]),t._v(" "),s("p",[t._v("第一个参数为要改变的执行主体中的this关键字，\n第一个之后的参数都是执行主体执行的时候需要传递给执行主体的参数，传递给执行主体的参数会放在执行主体自带的参数之前；\n改变函数中this关键字，在IE6-8下不兼容；它和call（以及apply）改变this的原理不一样\n预先让fn中的this指向opp，此时fn没有执行，只有fn执行的时候才起作用；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5版")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_Bind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" outerArgs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("outerArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6版")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_Bind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("outerArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("innerArgs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" outerArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("innerArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如：点击盒子的时候，执行fn，并让其中的this改变为opp")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\noBox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("无法实现，还没有点击的时候，fn已经执行了，只是把fn的返回结果给了onclick\noBox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//完美实现，点击的时候fn才执行，并预先让fn中的this变为opp;")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("在真实项目中，我们把实现一个具体功能的代码封装在函数中：")]),t._v(" "),s("p",[s("em",[t._v("好处：")])]),t._v(" "),s("p",[t._v("1：减少了冗余代码，开发效率高；")]),t._v(" "),s("p",[t._v("2：封装在一个函数中，页面中就基本上很难出现重复一样的代码了，减少了页面中代码的冗余度，提高了代码的重复利用率：低耦合高内聚；")]),t._v(" "),s("p",[t._v("我们把以上的特点称之为 "),s("em",[t._v("函数封装")]),t._v(" (OOP面向对象编程思想，需要我们掌握的就是类的继承、封装、多态)")])]),t._v(" "),s("h2",{attrs:{id:"函数的核心原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的核心原理"}},[t._v("#")]),t._v(" 函数的核心原理")]),t._v(" "),s("blockquote",[s("p",[t._v("函数作为引用数据类型的一种，也是按照地址来操作的，私有作用域中不带var的声明都是给window设置的属性；")])]),t._v(" "),s("h3",{attrs:{id:"栈内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈内存"}},[t._v("#")]),t._v(" "),s("code",[t._v("栈内存")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("栈内存")]),t._v(" "),s("p",[t._v("1、作用域（全局/私有作用域）：提供一个供JS代码执行的环境；执行JS代码的\n2、存储基本类型的值")]),t._v(" "),s("p",[t._v("释放\n一般情况下，函数执行形成栈内存，函数执行完，浏览器会把形成的栈内存释放掉；")]),t._v(" "),s("p",[s("em",[t._v("特殊情况")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("1、函数执行完，但是函数的私有作用域内有内容被栈内存以外的东西(变量、元素事件)占用，那么这个栈内存就不能被释放掉")]),t._v(" "),s("li",[t._v("2、全局下的栈内存只有在页面关闭的时候才会被释放。")])])]),t._v(" "),s("h3",{attrs:{id:"堆内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆内存"}},[t._v("#")]),t._v(" "),s("code",[t._v("堆内存")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("堆内存")]),t._v(" "),s("p",[t._v("存储引用数据类型值的，对象类型就是键值对，函数类型就是字符串。")]),t._v(" "),s("ul",[s("li",[t._v("对象会把键值对储存起来")]),t._v(" "),s("li",[t._v("函数会把JS代码当做字符串储存起来")])]),t._v(" "),s("p",[t._v("释放：将引用类型的空间地址赋值为null，或没有变量占用堆内存，浏览器就会释放这个地址。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("var o = {}")]),t._v("; 当前对象对应的堆内存被变量o占用着呢，堆内存是无法销毁的")]),t._v(" "),s("li",[s("code",[t._v("o = null")]),t._v("; null空对象指针（不指向任何的堆内存），此时上一次的堆内存就没有被占用了，谷歌浏览器会在空闲时间把没有被占用的堆内存自动释放(销毁/回收)")])])]),t._v(" "),s("h3",{attrs:{id:"定义变量的时候带var和不带var的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义变量的时候带var和不带var的区别"}},[t._v("#")]),t._v(" 定义变量的时候带var和不带var的区别?")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在全局作用域中，带不带"),s("code",[t._v("var")]),t._v("都一样，都相当于声明了一个全局变量，给全局对象设置了一个新的属性名，但是不带"),s("code",[t._v("var")]),t._v("的不能提前声明，所以在赋值前不能提前调用；")]),t._v(" "),s("p",[t._v("在局部作用域中，带"),s("code",[t._v("var")]),t._v("的话声明的都是私有变量，不带"),s("code",[t._v("var")]),t._v("的话声明的都是全局变量，也相当于给"),s("code",[t._v("window")]),t._v("设置了一个属性，也不能提前调用。")])]),t._v(" "),s("h3",{attrs:{id:"普通函数执行步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通函数执行步骤"}},[t._v("#")]),t._v(" 普通函数执行步骤")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("开辟一个私有作用域，然后把函数中的代码拿到私有作用域中执行")]),t._v(" "),s("ul",[s("li",[t._v("1、形参赋值")]),t._v(" "),s("li",[t._v("2、变量提升（形参赋值后，如果有函数声明且与形参名字相同，则覆盖形参的值，var声明相当于重复声明，不会覆盖形参的值）")]),t._v(" "),s("li",[t._v("3、代码从上到下执行")]),t._v(" "),s("li",[t._v("4、栈内存销毁、不销毁；")])])]),t._v(" "),s("h3",{attrs:{id:"变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[t._v("#")]),t._v(" 变量提升")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("预解释")]),t._v(" "),s("p",[t._v("在 "),s("em",[t._v("当前作用域")]),t._v(" 中，JS代码从上而下执行之前，浏览器会把所有带"),s("code",[t._v("var")]),t._v("和"),s("code",[t._v("function")]),t._v("关键字的进行 "),s("em",[t._v("提前声明")]),t._v("，"),s("em",[t._v("函数声明和定义同时完成")]),t._v("；（只对当前作用域下的变量或者函数起作用）\n"),s("em",[t._v("预解释")]),t._v(" ： (所有声明变量或声明函数都会被提升到当前函数的顶部)\n1、发现重复的，不重复声明，只定义，重复定义只会 "),s("em",[t._v("替换")]),t._v(" 之前的值;（函数声明加定义一起完成）\n"),s("em",[t._v("2、预解释不管条件；(在最新的浏览器（IE11及以上），不管条件成立与否都会提前声明，不会提前定义，然后再看条件是否成立，如果成立则看有没有函数，如果有函数，则先定义，如果没有，JS代码从上到下执行成立的代码。如果不成立，则走不成立的代码）IE10及以下（不管条件是否成立函数都会进行声明+定义）")]),t._v("；\n3、只对等号左边的进行变量提升，右边是值，不会提前声明什么的；\n4、预解释发生在同一个脚本块中。\n5、"),s("code",[t._v("return")]),t._v(" 后面跟着的是值，不会进行预解释，但是"),s("code",[t._v("return")]),t._v("下面的代码要进行预解释；")])]),t._v(" "),s("h3",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("作用域")]),t._v(" "),s("p",[t._v("作用域就是查找变量的 **"),s("code",[t._v("(去哪儿找，怎么找)")]),t._v("**的一套规则。")])]),t._v(" "),s("h3",{attrs:{id:"词法作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("词法作用域")]),t._v(" "),s("p",[t._v("词法作用域我们也叫上级作用域。词法作用域是你在写代码的时候将变量和块级作用域写在哪里来决定的，因此当词法分析器处理代码时会保持作用域不变。所以通过变量定义的位置就能知道变量的作用域。")]),t._v(" "),s("p",[t._v("函数的上级作用域：看函数在哪个作用域下定义的，他的上级作用域就是谁，和函数在哪执行的没有关系。只有函数执行才会产生私有作用域")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\ty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined 20(为什么不是100而是20，因为下一行的y=100还没有执行 哈哈哈被骗了吧)！")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//100 100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//10 100 为什么x是10而不是100，因为闭包里的x=100外界无法拿到；")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("作用域是根据名称查找变量的一套规则。实际情况中，通常需要同时顾及几个作用域。")]),t._v(" "),s("p",[t._v("在写代码时，当一个块或者函数嵌套在另一个块或函数中时，就发生了作用域的嵌套。因此，js在执行的时候，在当前作用域中无法找到某个变量时，引擎就会在外层嵌套的作用域中继续查找，直到找到该变量，或找到最外层作用域(也就是全局作用域)为止。")]),t._v(" "),s("p",[t._v("在私有作用域中 "),s("em",[t._v("声明的变量")]),t._v(" 和 "),s("em",[t._v("函数的形参")]),t._v(" 都是私有的变量；\n在私有作用域中，代码执行的时候遇到一个变量，首先看它是否为私有变量：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("是私有变量")]),t._v(" "),s("ul",[s("li",[t._v("则和外面没有任何关系，以后在这个作用域中操作的当前变量都按照私有的处理；")])])]),t._v(" "),s("li",[s("p",[t._v("不是私有变量")]),t._v(" "),s("ul",[s("li",[t._v("则往当前作用域的上级作用域进行查找，如果上级作用域中有，我们操作的都是上级作用域的中的变量(假如我们在当前作用域把值改了，相当于把上级作用域中的这个值给修改了)。如果上级作用域也没有，则继续往上查找，一直照到"),s("code",[t._v("window")]),t._v("为止，这就是作用域链；")]),t._v(" "),s("li",[t._v("如果找到window下也没有,分两种情况\n"),s("ul",[s("li",[s("ol",[s("li",[t._v("我们是获取值：console.log(total);->报错，下面代码不再执行")])])]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("我们是设置值：total=100；->相当于给window增加了一个属性名叫total，属性值为100;")])])])])])])])])]),t._v(" "),s("h3",{attrs:{id:"作用域是否销毁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域是否销毁"}},[t._v("#")]),t._v(" 作用域是否销毁")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("em",[t._v("堆内存")]),t._v("\n1、对象数据类型或者函数数据类型在定义的时候首先都会先开辟一个堆内存，堆内存有一个引用地址，如果有变量或者元素事件知道了这个地址，我们就说这个堆内存被占用了，那么就要考虑这个堆内存是否会销毁；")]),t._v(" "),s("p",[s("em",[t._v("栈内存")])]),t._v(" "),s("ul",[s("li",[t._v("全局作用域：只有当页面关闭的时候全局作用域才会销毁。")]),t._v(" "),s("li",[t._v("私有作用域：一般来说，函数体中的代码执行完成，形成的栈内存会立即释放（自执行函数也不例外），当然也有不释放的。\n"),s("ul",[s("li",[s("p",[t._v("当私有作用域中的堆内存的地址被作用域以外的东西占用了，那么当前的这个作用域就不能被销毁(下面为三种情况)")]),t._v(" "),s("ul",[s("li",[t._v("函数执行形成一个私有作用域，如果私有作用域中的部分内容被以外的变量占用了，当前作用域不销毁\n如：函数返回了一个"),s("code",[t._v("引用数据类型")]),t._v("的值，而且在外面有一个变量接受了这个返回值，此时当前作用域就不能销毁，想要销毁只需把外面的变量赋值为null，即解除占用即可；")])]),t._v(" "),s("p",[s("em",[t._v("如果返回的是一个基本数据类型的值，而且外面有一个变量接收，当前私有作用域是否会销毁？")])]),t._v(" "),s("p",[t._v("会销毁,因为返回引用数据类型的值会在私有作用域中开辟一个堆内存，而且这个堆内存被外面的变量或元素元素事件占用着，所以这个堆内存不销毁，进而导致这个堆内存所在的私有作用域也不会销毁。而基本数据类型值是直接把值拷贝一份给外面的变量，所以返回完成后，函数中的堆内存没有被占用，就会被销毁掉，形成的私有作用域也会被销毁掉；\n"),s("img",{attrs:{src:t.$withBase("/assets/js-12-2.png"),alt:"js-12-2"}})]),t._v(" "),s("ul",[s("li",[t._v("在一个私有的作用域中给DOM元素的事件绑定方法，一般情况下我们的私有作用域都不销毁\n"),s("img",{attrs:{src:t.$withBase("/assets/js-12-3.png"),alt:"js-12-3"}})]),t._v(" "),s("li",[t._v("下述情况属于不立即销毁\n函数执行返回一个函数没有被其他东西占用，但是还需要执行一次，所以暂时不销毁，当返回的函数执行完成后，浏览器会在空闲的时候把它销毁了；")])])])])])]),t._v(" "),s("p",[s("em",[t._v("总结：作用域是否销毁就看两步：")])]),t._v(" "),s("ul",[s("li",[s("em",[t._v("1、这个作用域是否产生了堆内存")])]),t._v(" "),s("li",[s("em",[t._v("2、这个作用域产生的堆内存是否被这个作用域以外的变量或事件占用了，如果被占用了，那么这个堆内存不能被销毁，进而导致这个私有作用域也不能被销毁。")])])]),t._v(" "),s("p",[s("em",[t._v("如果产生的堆内存被自身作用域中的变量占用了，那么这个堆内存会在被使用后销毁，所在的私有作用域也会被销毁")])])]),t._v(" "),s("h3",{attrs:{id:"垃圾清除机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾清除机制"}},[t._v("#")]),t._v(" 垃圾清除机制")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("标记清除")]),t._v(" "),s("p",[t._v("js 中最常用的垃圾收集方式是标记清除。垃圾收集器在运行的时候会给存储在内存中的所有变量都加上标记，然后它会去掉正在被使用变量的标记。而没有被去掉标记的将被视为准备删除的变量；最后，垃圾收集器完成内存清除工作，销毁那些带标记的值并回收他们所占用的内存空间；\nIE、Firefox、Opera、Chrome 和 Safari 的 js 实现使用的都是标记清除式的垃圾收集策略（或类似的策略），只不过垃圾收集的时间间隔互有不同")])]),t._v(" "),s("h3",{attrs:{id:"函数存在了多面性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数存在了多面性"}},[t._v("#")]),t._v(" 函数存在了多面性")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("函数的多面性")]),t._v(" "),s("p",[t._v("(1)、作为普通函数 "),s("code",[t._v("fn()")]),t._v("：它本身就是一个普通的函数，执行的时候形成私有的作用域（闭包），形参赋值，预解释，代码执行，执行完成后栈内存销毁不销毁\n(2)、作为类,即构造函数 "),s("code",[t._v("new Fn()")]),t._v("：它有自己的实例，也有一个叫做"),s("code",[t._v("prototype")]),t._v("属性是自己的原型，它的实例都可以指向自己的原型\n(3)、作为普通对象 "),s("code",[t._v("fn.aaa")]),t._v("：和"),s("code",[t._v("var obj={}")]),t._v("中的obj一样，就是一个普通的对象，它作为对象可以有一些自己的私有属性，也可以通过"),s("code",[t._v("__proto__")]),t._v("找到"),s("code",[t._v("Function.prototype")])]),t._v(" "),s("ul",[s("li",[t._v("所有的函数都可以调取"),s("code",[t._v("Function.prototype")]),t._v("（类也是函数）上的方法：如"),s("code",[t._v("call、apply、bind")])]),t._v(" "),s("li",[t._v("所有的对象都可以调取"),s("code",[t._v("Object.prototype")]),t._v("（函数也是对象）上的方法：如"),s("code",[t._v("toString、hasOwnProperty")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/assets/js-12-4.png"),alt:"js-12-4"}})])])]),t._v(" "),s("h3",{attrs:{id:"普通函数执行和构造函数执行的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#普通函数执行和构造函数执行的区别"}},[t._v("#")]),t._v(" 普通函数执行和构造函数执行的区别")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("区别")]),t._v(" "),s("p",[t._v("构造函数执行的时候，也是先形成一个私有作用域，形参赋值，变量提升，在代码从上而下执行之前，构造函数有特殊的操作："),s("em",[t._v("浏览器会在当前的作用域中默认创建一个对象数据类型的值，并且会让构造函数中的this指向创建的这个对象。")]),t._v(" 然后JS代码再执行，代码执行完成后，即使函数中没有写return，在构造函数模式中："),s("em",[t._v("浏览器会默认的把创建的对象返回到函数外面")])]),t._v(" "),s("p",[s("em",[t._v("总结：")])]),t._v(" "),s("ul",[s("li",[t._v("构造函数执行期间，既具备函数执行的一面，也同时具备自己独有的操作：在构造函数执行期间，浏览器会默认创建一个对象，这个对象就是当前这个构造函数(类)实例，函数执行完成后，浏览器会默认的把这个实例返回。所以"),s("code",[t._v("new Fn()")]),t._v("执行，Fn是一个类，返回的结果就是Fn这个类的一个实例。")])])]),t._v(" "),s("h3",{attrs:{id:"阿里面试题执行顺序总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阿里面试题执行顺序总结"}},[t._v("#")]),t._v(" 阿里面试题执行顺序总结")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("em",[t._v("执行顺序总结")]),t._v("：(经验之谈目前来说准确)")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("1、new 操作符只能new构造函数，否则会报错，xxx is not a constructor")])]),t._v(" "),s("p",[s("em",[t._v("2、new碰到（）就会把new与（）之间的当成构造函数处理，所以会先执行new与（）之间的运算，之后再new。")])])]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("闭包")]),t._v(" "),s("p",[t._v("闭包简单的说就是私有作用域的快照。函数"),s("code",[t._v("(A)")]),t._v("嵌套函数"),s("code",[t._v("(B)")]),t._v("时，为了让函数"),s("code",[t._v("(B)")]),t._v("顺利执行，会对作用域链进行了"),s("code",[t._v("tree-shaking")]),t._v("，只留下函数"),s("code",[t._v("(B)")]),t._v("执行所需要的外部引用，保存在堆内存中，作为函数"),s("code",[t._v("(B)")]),t._v("的"),s("code",[t._v("[[Scopes]]")]),t._v("属性的值，让函数"),s("code",[t._v("(B)")]),t._v("不管在哪执行，都能随时访问用到的外部引用。 形成的这个堆内存叫做闭包。")]),t._v(" "),s("p",[t._v("闭包解决了什么问题？")]),t._v(" "),s("ul",[s("li",[t._v("1、闭包解决了函数作用域的瞬时性的问题（保存需要用到的数据），比如计数器、校验邮箱函数")]),t._v(" "),s("li",[t._v("2、闭包解决了作用域共享的问题（保护私有变量不受外界干扰），比如选项卡")])]),t._v(" "),s("p",[t._v("什么是函数作用域的瞬时性问题？\n函数执行形成私有作用域，函数执行完成之后，如果没有返回函数被外部占用，私有作用域就会被释放。对于一些之后的操作，就无法再引用私有作用域中的一些数据。这就是函数作用域的瞬时性。")]),t._v(" "),s("p",[s("em",[s("code",[t._v("函数执行会形成一个私有的作用域，保护私有变量不受外部影响，从外部拿不到里面的变量，此时我们可以理解为私有作用域把私有变量保护了起来，这种保护机制称之为'闭包'。由方法运行而产生的私有作用域就叫闭包，为了让变量更安全。闭包是一种机制而不是某种形式；")])])]),t._v(" "),s("p",[t._v("闭包面试总结：")]),t._v(" "),s("ul",[s("li",[t._v("闭包是指有权访问另一个函数作用域中变量的函数")]),t._v(" "),s("li",[t._v("闭包就是连接私有作用域和外部作用域之间的一座桥梁，它不仅能保护私有变量不受外界干扰，还能保存一些内容，而且还能把私有作用域中的东西拿到外部使用。")])])]),t._v(" "),s("h3",{attrs:{id:"如果我想在外部使用闭包中的值怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果我想在外部使用闭包中的值怎么办"}},[t._v("#")]),t._v(" 如果我想在外部使用闭包中的值怎么办？")]),t._v(" "),s("blockquote",[s("p",[t._v("1.在闭包中设置返回值，在外部声明一个变量接收。")]),t._v(" "),s("p",[t._v("2.把闭包中的值赋值给window的一个属性。")])]),t._v(" "),s("h3",{attrs:{id:"闭包的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包的作用"}},[t._v("#")]),t._v(" 闭包的作用")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("1、保护")])]),t._v(" "),s("p",[t._v("形成私有作用域，保护里面的私有变量不受外界的干扰，真实项目中，我们利用这种保护机制，实现团队协作开发（避免了多人同一个命名，导致代码冲突的问题）")]),t._v(" "),s("ul",[s("li",[t._v("jQuery：常用的JS类库，提供了很多项目中常用的方法（兼容所有浏览器）")]),t._v(" "),s("li",[t._v("Zepto：小型JQ，专门为移动端开发准备的")]),t._v(" "),s("li",[t._v("用闭包代替全局变量")]),t._v(" "),s("li")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//JQ代码片段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("funciton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jQuery")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\twindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jQuery"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("jQuery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jQery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Zepto代码片段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Zepto"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Zepto"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("funciton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Zepto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Zepto\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Zepto")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("真实项目中，我们利用这种保护机制，实现团队协作开发（避免了多人同一个命名，导致代码冲突的问题）")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//A")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("funciton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//A写的代码")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\twindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//B")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//B写的代码")]),t._v("\n\tfunciton "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//B想要调取A写的fn")]),t._v("\n\twindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[s("em",[t._v("2、保存")])]),t._v(" "),s("p",[t._v("函数执行形成一个私有作用域，函数执行完成，形成的这个栈内存一般情况都会自动释放")]),t._v(" "),s("p",[t._v("但是当栈内存中的内容被栈内存以外的其他东西（变量/元素的事件）占用了，那么这个栈内存就不能被释放掉，也就形成了不销毁的私有作用域（里面的私有变量也不会销毁）；")]),t._v(" "),s("p",[t._v("应用：高级单例模式，封装插件；")])]),t._v(" "),s("h2",{attrs:{id:"i-与-i的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-与-i的区别"}},[t._v("#")]),t._v(" i++与++i的区别：")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("i++")]),t._v(",先拿原有的值和其他值运算，运算后再累加1；\n"),s("code",[t._v("++i")]),t._v("，先累加1，再拿结果进行运算；\n"),s("code",[t._v("++i")]),t._v("和"),s("code",[t._v("i=i+1")]),t._v("的区别\n"),s("code",[t._v("++i")]),t._v("在拿到i的值的时候，会先用"),s("code",[t._v("Number()")]),t._v("转化一下，然后再累加1，之后再运算，而"),s("code",[t._v("i=i+1")]),t._v("不会；")])]),t._v(" "),s("h2",{attrs:{id:"函数的中的-this-指向问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的中的-this-指向问题"}},[t._v("#")]),t._v(" 函数的中的 "),s("code",[t._v("this")]),t._v(" 指向问题")]),t._v(" "),s("blockquote",[s("p",[t._v("函数中的"),s("code",[t._v("this")]),t._v("指向是"),s("strong",[t._v("函数运行时")]),t._v("决定的，不是编写代码时绑定的。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("this的绑定规则：")]),t._v(" "),s("ul",[s("li",[t._v("1、默认绑定"),s("br"),t._v("\n在非严格模式下，函数在独立调用时，函数中的"),s("code",[t._v("this")]),t._v("使用默认绑定，"),s("code",[t._v("this")]),t._v("指向全局对象。如果使用严格模式，则"),s("code",[t._v("this")]),t._v("会绑定到"),s("code",[t._v("undefined")]),t._v("。可以把这条规则看做是无法应用其他规则时的默认规则。")]),t._v(" "),s("li",[t._v("2、隐式绑定"),s("br"),t._v("\n当函数引用有上下文对象时，隐式绑定会把函数调用中的"),s("code",[t._v("this")]),t._v("绑定到这个上下文对象。而且对象属性引用链上只有上一层或者说最后一层才会有隐式绑定的作用。"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("foo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("obj1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 32")]),t._v("\n")])])]),s("ul",[s("li",[t._v("隐式丢失问题：间接引用的函数执行时隐式绑定的"),s("code",[t._v("this")]),t._v("会丢失，丢失后会应用默认绑定")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("foo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 间接引用，函数别名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'oops, global'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// oops, global")]),t._v("\n")])])]),t._v("参数传递其实就是一种隐式赋值。")]),t._v(" "),s("li",[t._v("3、显示绑定"),s("br"),t._v("\n使用"),s("code",[t._v("bind、call、apply")]),t._v("可以强制的把函数中的"),s("code",[t._v("this")]),t._v("绑定到提供的对象上。（箭头函数不适用）")]),t._v(" "),s("li",[t._v("4、"),s("code",[t._v("new")]),t._v("绑定"),s("br"),t._v("\n当使用"),s("code",[t._v("new")]),t._v("操作符来执行函数时，我们会构造一个新对象，并把它绑定到函数中的"),s("code",[t._v("this")]),t._v("上。")])]),t._v(" "),s("p",[s("em",[t._v("绑定规则优先级")]),s("br"),t._v(" "),s("code",[t._v("new")]),t._v("绑定 > 显示绑定 > 隐式绑定 > 默认绑定")]),t._v(" "),s("p",[t._v("全局中的this是window，我们都研究函数内部的this的指向问题")]),t._v(" "),s("p",[t._v("在JS的非严格模式下")]),t._v(" "),s("ul",[s("li",[t._v("1、自执行函数中的this都是window")]),t._v(" "),s("li",[t._v("2、给元素的某个事件绑定方法，当事件触发执行对应方法的时候，方法中的this一般都是当前操作的元素本身(在IE6-8下DOM2级事件用attachEvent绑定方法时，方法中的this是window，而不是当前操作元素本身)")]),t._v(" "),s("li",[t._v("3、函数执行前的主体\n"),s("ul",[s("li",[s("code",[t._v("fn()")]),t._v("; "),s("code",[t._v("this")]),t._v("为windows")]),t._v(" "),s("li",[s("code",[t._v("obj.fn()")]),t._v("; "),s("code",[t._v("this")]),t._v("为obj")])])]),t._v(" "),s("li",[t._v("4、ES6中箭头函数中的this继承宿主环境中的this：看方法在哪定义的，宿主环境就是谁，箭头函数中的this就是宿主环境中的this；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>this:obj")]),t._v("\n\t\t\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>this:window 不管在哪执行，定时器中的this是window")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>想让定时器函数中的this也是obj")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>this:obj")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _this"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>_this:obj")]),t._v("\n\t\t\t_this"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>this:obj 箭头函数中的this继承宿主环境(上级作用域中)的this")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在JS严格模式下（让JS更加严谨）\n开启严格模式：在当前作用域的第一行加 "),s("code",[t._v("use strict")]),t._v("。开启后所有作用域下再执行的JS代码都按照严格模式处理")]),t._v(" "),s("ul",[s("li",[t._v("严格模式下，没有写执行主体的话，"),s("code",[t._v("this")]),t._v("就是"),s("code",[t._v("undefined")]),t._v("；")])])]),t._v(" "),s("h2",{attrs:{id:"arguments实参集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments实参集合"}},[t._v("#")]),t._v(" arguments实参集合")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("只有传递了实参才会保持映射，不传递一直都是undefined")]),t._v(" "),s("p",[t._v("当我们不知道用户具体要传递几个值得时候（传递几个值都可以），此时我们无法设置形参的个数；遇到此种情况，需要使用函数内置的实参集合："),s("code",[t._v("arguments")]),t._v("\n1、"),s("code",[t._v("arguments")]),t._v("只有函数才有，是一个类数组集合")]),t._v(" "),s("ul",[s("li",[t._v("1、以数字作为索引（属性名），从零开始")]),t._v(" "),s("li",[t._v("2、有一个"),s("code",[t._v("length")]),t._v("属性，存储的是当前实参的个数 "),s("code",[t._v("arguments.length")])]),t._v(" "),s("li",[t._v("3、"),s("code",[t._v("arguments.callee")]),t._v(" 动态的得到当前执行函数的方法名\n2、不管执行函数是否传递参数，"),s("code",[t._v("arguments")]),t._v("天生就存在，没有传递参数时arg是个空的集合，传递了参数的arg中包含了所有传递的参数信息，"),s("em",[t._v("如果没有传递实参，那么形参的值在"),s("code",[t._v("arguments")]),t._v("中就是"),s("code",[t._v("undefined")]),t._v("如果有变量名与形参冲突，那么操作的一直都是私有变量，argument中没有传递实参的形参的值还是"),s("code",[t._v("undefined")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//b没有传递实参所以在arguments中的值一直都是undefined")]),t._v("\n\tb"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\targuments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("em",[t._v("非严格模式下，如果传递的有实参，那么arguments的值永远和对应命名参数的值保持同步，如果没有传递实参，则arguments中形参对应的值就一直是undefined（来自高程3第66页，在严格模式下arguments将不与实参保持映射关系。重写arguments 的值会导致语法错误（代码将不会执行）），但是如果使用delete 删除了arguments中某一个索引对应的值，再去修改实参，那么实参和arguments将不再保持同步；")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[empty × 1, callee: ƒ, Symbol(Symbol.iterator): ƒ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   callee:ƒ (a)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   length:1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   Symbol(Symbol.iterator):ƒ values()")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   __proto__:Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])]),t._v(" "),s("h2",{attrs:{id:"js中函数的返回值return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中函数的返回值return"}},[t._v("#")]),t._v(" JS中函数的返回值"),s("code",[t._v("return")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("return")]),t._v(" "),s("p",[t._v("函数中是有返回值的，我们如果想在外面使用函数私有的一些信息，那么就需要通过return，把这些信息返回出来供外面使用。如果不写"),s("code",[t._v("return")]),t._v("或者"),s("code",[t._v("return")]),t._v("后面什么都不写，则默认返回"),s("code",[t._v("undefined")]),t._v("。\n在函数体中，"),s("code",[t._v("return")]),t._v("后面返回的都是值：如果是一个表达式的话会先计算出结果之后再把结果返回")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回的不是val变量，而是val所存储的值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出结果为 3，因为后面是一个自执行函数表达式，所以需要计算出结果之后再把结果返回")]),t._v("\n")])])]),s("p",[t._v("sum   //代表函数本身\nsum() //函数执行，代表的是当前函数执行后返回的结果（return后面是什么函数返回的就是什么）")])]),t._v(" "),s("h2",{attrs:{id:"具名函数表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具名函数表达式"}},[t._v("#")]),t._v(" 具名函数表达式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[FunctionA]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("具名函数表达式的标识符只能在函数内部访问，函在函数外部访问不到。")]),t._v(" "),s("p",[t._v("绑定为函数名的标识符不能再绑定为其他值，即该标识符绑定的值是不可更改的；")])]),t._v(" "),s("h2",{attrs:{id:"js中的匿名函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中的匿名函数"}},[t._v("#")]),t._v(" JS中的匿名函数")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("没有名字的函数")]),t._v(" "),s("p",[t._v("函数表达式—>把一个匿名函数（有名字也可以）作为值赋值给一个变量或者一个元素的某个事件）")]),t._v(" "),s("ul",[s("li",[t._v("声明的变量指向函数体时（即函数表达式），变量的声明会被提升（foo的声明会被提升），但是它指向的函数体只会在执行的时候才被赋值。对于 "),s("code",[t._v("var bar = function foo(){}")]),t._v(";语句,其实就是一个有效的命名函数表达式,但有一点需要记住:命名函数表达式的标示符(即函数名称)在外部作用域是无效的，在其内部作用域是有效的。\n自执行函数—>创建函数和执行函数放在一起了，创建完成后立马执行;"),s("strong",[t._v("(自执行函数什么时候执行？预解释之后，JS代码从上到下执行，碰到自执行函数时，才会创建和执行；)")]),t._v("\n以下都是自执行函数，符号只是控制语法规范\n除了第一种，其他4种方式都会改变自执行函数的返回结果")]),t._v(" "),s("li",[s("code",[t._v("(function(){})()")]),t._v(";")]),t._v(" "),s("li",[s("code",[t._v("~function(n){}(10)")]),t._v("; ~：按位非，执行按位非的结果就是返回数值的反码")]),t._v(" "),s("li",[s("code",[t._v("-function(n){}(10)")]),t._v(";")]),t._v(" "),s("li",[s("code",[t._v("+function(n){}(10)")]),t._v(";")]),t._v(" "),s("li",[s("code",[t._v("!function(n){}(10)")]),t._v(";")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);