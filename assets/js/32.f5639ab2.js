(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{346:function(v,e,_){"use strict";_.r(e);var t=_(25),a=Object(t.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#浏览器缓存位置"}},[v._v("浏览器缓存位置")])]),e("li",[e("a",{attrs:{href:"#浏览器会把哪些文件丢进内存中-哪些丢进硬盘中"}},[v._v("浏览器会把哪些文件丢进内存中，哪些丢进硬盘中？")])]),e("li",[e("a",{attrs:{href:"#浏览器的缓存策略"}},[v._v("浏览器的缓存策略")])]),e("li",[e("a",{attrs:{href:"#强缓存"}},[v._v("强缓存")]),e("ul",[e("li",[e("a",{attrs:{href:"#expires"}},[v._v("Expires")])]),e("li",[e("a",{attrs:{href:"#cache-control"}},[v._v("Cache-Control")])]),e("li",[e("a",{attrs:{href:"#expires和cache-control的区别"}},[v._v("Expires和Cache-Control的区别")])])])]),e("li",[e("a",{attrs:{href:"#协商缓存"}},[v._v("协商缓存")]),e("ul",[e("li",[e("a",{attrs:{href:"#last-modified-和-if-modified-since"}},[v._v("Last-Modified 和 If-Modified-Since")])]),e("li",[e("a",{attrs:{href:"#etag-和-if-none-match"}},[v._v("Etag 和 If-None-Match")])])])]),e("li",[e("a",{attrs:{href:"#如果什么缓存策略都没设置-那么浏览器会怎么处理"}},[v._v("如果什么缓存策略都没设置，那么浏览器会怎么处理?")])]),e("li",[e("a",{attrs:{href:"#用户行为对缓存的影响"}},[v._v("用户行为对缓存的影响")])]),e("li",[e("a",{attrs:{href:"#缓存总结"}},[v._v("缓存总结")])]),e("li",[e("a",{attrs:{href:"#transfer-encoding"}},[v._v("Transfer-Encoding")])])])]),e("p"),v._v(" "),e("h1",{attrs:{id:"_5、浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、浏览器缓存"}},[v._v("#")]),v._v(" 5、浏览器缓存")]),v._v(" "),e("h2",{attrs:{id:"浏览器缓存位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存位置"}},[v._v("#")]),v._v(" 浏览器缓存位置")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Memory Cache")]),v._v("：内存缓存,窗口关闭就会消失")]),v._v(" "),e("li",[e("code",[v._v("Disk Cache")]),v._v("：磁盘缓存，也就是存储在硬盘中的缓存，读写速度慢，比"),e("code",[v._v("Memory Cache")]),v._v("胜在容量和存储时效性上。")])]),v._v(" "),e("p",[v._v("浏览器有三级缓存原理")]),v._v(" "),e("ul",[e("li",[v._v("1、先找内存，如果内存中存在，从内存中加载")]),v._v(" "),e("li",[v._v("2、内存中未找到，再找硬盘，硬盘中存在，从硬盘中加载")]),v._v(" "),e("li",[v._v("3、硬盘中未找到，进行网络请求，加载到的资源缓存到硬盘和内存中")])])]),v._v(" "),e("h2",{attrs:{id:"浏览器会把哪些文件丢进内存中-哪些丢进硬盘中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器会把哪些文件丢进内存中-哪些丢进硬盘中"}},[v._v("#")]),v._v(" 浏览器会把哪些文件丢进内存中，哪些丢进硬盘中？")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("对于大文件来说，是不会存在内存中的，反之优先。\n当前系统内存使用率高的话，文件优先存进磁盘中。")])]),v._v(" "),e("h2",{attrs:{id:"浏览器的缓存策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的缓存策略"}},[v._v("#")]),v._v(" 浏览器的缓存策略")]),v._v(" "),e("blockquote",[e("p",[v._v("通常浏览器的缓存策略有两种："),e("em",[v._v("强制缓存 和 协商缓存")]),v._v(",并且缓存策略都是通过"),e("code",[v._v("HTTP header")]),v._v("来实现的。")])]),v._v(" "),e("h2",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[v._v("#")]),v._v(" 强缓存")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("强缓存")]),v._v(" "),e("p",[v._v("当用户第一次访问页面之后，浏览器将数据缓存起来，在过期时间内，都不会请求服务器，而是直接去读取缓存中的内容。过期时间从第一次请求的响应头中获取。在过期时间内，从缓存中读取，超出过期时间，则会使用协商缓存。在chrome控制台的Network选项中可以看到请求返回200的状态码(灰色)，并且Size显示 "),e("em",[v._v("form disk cache")]),v._v(" 或 "),e("em",[v._v("form memory cache")]),v._v("。")]),v._v(" "),e("p",[v._v("强缓存可以通过设置两种"),e("code",[v._v("HTTP Header")]),v._v("来实现：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Expires")])]),v._v(" "),e("li",[e("code",[v._v("Cache-control")]),v._v("(优先级高于"),e("code",[v._v("Expires")]),v._v(")")])])]),v._v(" "),e("h3",{attrs:{id:"expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[v._v("#")]),v._v(" Expires")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("http1.0")]),v._v("的产物，缓存的过期时间，用来指定资源的到期时间，是服务器端的具体时间点，浏览器发送请求时会根据系统时间和"),e("code",[v._v("Expires")]),v._v("的值进行对比，由于是和系统时间作比较，所以会有缓存有效期不准的问题（已不推荐使用）。也就是说，"),e("strong",[e("code",[v._v("Expires = max-age + 请求时间")])]),v._v("，需要和"),e("b",[e("code",[v._v("Last-Modified")])]),v._v("结合使用。"),e("b",[e("code",[v._v("Expires")])]),v._v("是"),e("code",[v._v("Web")]),v._v("服务器响应消息头字段，在响应"),e("code",[v._v("http")]),v._v("请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据，而无需再次请求。")])]),v._v(" "),e("h3",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[v._v("#")]),v._v(" Cache-Control")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("Cache-Control")]),v._v(" "),e("p",[e("code",[v._v("http1.1")]),v._v("的产物，控制缓存的行为，常用属性值如下：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("max-age")]),v._v("：单位为妙，多少秒后失效")]),v._v(" "),e("li",[e("code",[v._v("no-cache")]),v._v("：不使用强缓存，需要与服务器验证缓存是否新鲜")]),v._v(" "),e("li",[e("code",[v._v("no-store")]),v._v("：禁止使用缓存（包括协商缓存），每次向服务器请求最新的资源")]),v._v(" "),e("li",[e("code",[v._v("private(默认值)")]),v._v("：专用于个人的缓存，中间代理、CDN等不能缓存此响应，"),e("code",[v._v("max-age")]),v._v("存在时则会验证是否过期")]),v._v(" "),e("li",[e("code",[v._v("public")]),v._v("：响应可以被中间代理、CDN缓存")]),v._v(" "),e("li",[e("code",[v._v("must-revalidate")]),v._v("：在缓存过期前可以使用，过期后必须向服务器验证")])])]),v._v(" "),e("h3",{attrs:{id:"expires和cache-control的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires和cache-control的区别"}},[v._v("#")]),v._v(" Expires和Cache-Control的区别")]),v._v(" "),e("blockquote",[e("p",[v._v("最大的区别就是"),e("b",[e("code",[v._v("Expires")])]),v._v("是"),e("code",[v._v("http1.0")]),v._v("的产物，而"),e("b",[e("code",[v._v("Cache-Control")])]),v._v("是"),e("code",[v._v("http1.1")]),v._v("的产物，两者同时存在的话"),e("b",[e("code",[v._v("Cache-Control")])]),v._v("优先级是高于"),e("b",[e("code",[v._v("Expires")])]),v._v("的。")]),v._v(" "),e("p",[v._v("强缓存判断是否缓存的依据来自于是否"),e("b",[e("code",[v._v("超出某个时间或某个时间段")])]),v._v("，而不关心服务器端文件是否更新。因此才有了协商缓存策略；")])]),v._v(" "),e("h2",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[v._v("#")]),v._v(" 协商缓存")]),v._v(" "),e("blockquote",[e("p",[v._v("当强缓存失效后，浏览器携带缓存标识向服务器发送请求，由服务器根据缓存标识决定是否使用缓存。\n协商缓存可以通过设置"),e("code",[v._v("HTTP Header")]),v._v("来实现：")]),v._v(" "),e("ul",[e("li",[e("b",[e("code",[v._v("Last-Modified")])])]),v._v(" "),e("li",[e("b",[e("code",[v._v("Etag")])]),v._v("（会优先验证Etag）")])])]),v._v(" "),e("h3",{attrs:{id:"last-modified-和-if-modified-since"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-和-if-modified-since"}},[v._v("#")]),v._v(" Last-Modified 和 If-Modified-Since")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("浏览器在第一次访问资源时，服务器返回资源的同时，在"),e("code",[v._v("response header")]),v._v("中会添加"),e("b",[e("code",[v._v("Last-Modified")])]),v._v("的"),e("code",[v._v("header")]),v._v("，值为这个资源在服务器上最后的修改时间，浏览器接收后缓存资源和"),e("code",[v._v("header")]),v._v("。")]),v._v(" "),e("p",[v._v("浏览器下一次请求时，当强缓存已过期，且检测到有"),e("b",[e("code",[v._v("Last-Modified")])]),v._v("这个"),e("code",[v._v("header")]),v._v("，就会在请求中添加"),e("b",[e("code",[v._v("If-Modified-Since")])]),v._v("这个"),e("code",[v._v("header")]),v._v("，值就是"),e("b",[e("code",[v._v("Last-Modified")])]),v._v("的值，服务器再次收到这个资源请求，就会根据"),e("b",[e("code",[v._v("If-Modified-Since")])]),v._v("这个值与服务器中这个资源的最后修改时间做对比，如果没有变化，就返回"),e("code",[v._v("304")]),v._v("、新的"),e("code",[v._v("header")]),v._v("和空响应体，直接从缓存中读取。如果资源修改了，就会返回新的资源和新的过期时间。")]),v._v(" "),e("p",[e("strong",[e("code",[v._v("Last-Modified")]),v._v("存在的弊端")]),v._v("：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("Last-Modified")]),v._v("只能以秒为单位计时，如果文件的修改频率在秒级以下，这样的话，"),e("code",[v._v("Last-Modified")]),v._v("就不再准确；")]),v._v(" "),e("li",[v._v("有些文档可能会被周期性的重写，尽管内容没有发生变化，但"),e("code",[v._v("Last-Modified")]),v._v("会发生变化。")])])]),v._v(" "),e("h3",{attrs:{id:"etag-和-if-none-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etag-和-if-none-match"}},[v._v("#")]),v._v(" Etag 和 If-None-Match")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),e("p",[v._v("为了解决"),e("code",[v._v("Last-Modified")]),v._v("存在的弊端,"),e("code",[v._v("HTTP1.1")]),v._v("推出了"),e("code",[v._v("Etag")]),v._v(" 和 "),e("code",[v._v("If-None-Match")]),v._v("。"),e("code",[v._v("Etag")]),v._v("是服务器响应请求时，返回当前资源的实体标签（由服务器生成，可以是文档的序列号或版本名，或者是文档内容的校验和及其他指纹信息），当发布者对文档进行修改时，可以修改文档的实体标签来说明这个新的版本，这样，缓存就可以用"),e("code",[v._v("If-None-Match")]),v._v("来检验资源是否被修改过。\n浏览器在下次发送请求时，就会将"),e("code",[v._v("Etag")]),v._v("的值放在请求头"),e("code",[v._v("header")]),v._v("的"),e("code",[v._v("If-None-Match")]),v._v("中。服务器会比对"),e("code",[v._v("If-None-Match")]),v._v("的值和该资源的"),e("code",[v._v("Etag")]),v._v("值是否一致，如果一致，说明未修改，返回304，浏览器继续使用缓存。如果不一致，返回200以及新的资源和"),e("code",[v._v("Etag")]),v._v("；\n"),e("code",[v._v("Etag 和 Last-Modified 用哪个?")]),v._v("\n给哪个用哪个，如果两个都给，则只有"),e("code",[v._v("Etag")]),v._v("不变，且"),e("code",[v._v("Last-Modified")]),v._v("与服务器一致的时候才能返回"),e("code",[v._v("304 Not Modified")]),v._v(";")])]),v._v(" "),e("img",{attrs:{src:v.$withBase("/assets/browser-5-2.png"),alt:"browser-5-2"}}),v._v(" "),e("h2",{attrs:{id:"如果什么缓存策略都没设置-那么浏览器会怎么处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果什么缓存策略都没设置-那么浏览器会怎么处理"}},[v._v("#")]),v._v(" 如果什么缓存策略都没设置，那么浏览器会怎么处理?")]),v._v(" "),e("blockquote",[e("p",[v._v("浏览器会采用一个启发式的算法，通常会取响应头中的 "),e("code",[v._v("Date")]),v._v(" 减去 "),e("code",[v._v("Last-Modified")]),v._v(" 值的 "),e("code",[v._v("10%")]),v._v(" 作为缓存时间。")])]),v._v(" "),e("h2",{attrs:{id:"用户行为对缓存的影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户行为对缓存的影响"}},[v._v("#")]),v._v(" 用户行为对缓存的影响")]),v._v(" "),e("blockquote",[e("p",[v._v("意思是用户行为会如何触发缓存策略")]),v._v(" "),e("ul",[e("li",[v._v("用户输入"),e("code",[v._v("url")]),v._v("，查找"),e("code",[v._v("disk cache")]),v._v("，是否有匹配，有则直接使用，没有则发送请求；")]),v._v(" "),e("li",[v._v("普通刷新（F5）：因为窗口并没有关闭，因此"),e("code",[v._v("memory cache")]),v._v(" 依然是可用的，会被优先使用（如果匹配的话）。其次才是"),e("code",[v._v("disk cache")]),v._v("。")]),v._v(" "),e("li",[v._v("强制刷新（Ctrl+F5）：浏览器不使用缓存。因此发送请求头部均带有"),e("code",[v._v("Cache-Control：no-cache")]),v._v("，服务器直接返回"),e("code",[v._v("200")]),v._v("和最新内容；")])])]),v._v(" "),e("h2",{attrs:{id:"缓存总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存总结"}},[v._v("#")]),v._v(" 缓存总结")]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("当浏览器需要资源时")]),v._v(" "),e("ul",[e("li",[v._v("1、调用 "),e("code",[v._v("Service Worker")]),v._v(" 的"),e("code",[v._v("fetch")]),v._v("事件响应")]),v._v(" "),e("li",[v._v("2、查看 "),e("code",[v._v("memory cache")])]),v._v(" "),e("li",[v._v("3、查看 "),e("code",[v._v("disk cache")]),v._v(" ，这里会细分：\n"),e("ul",[e("li",[v._v("有强缓存且未失效，则使用强制缓存，返回"),e("code",[v._v("200")])]),v._v(" "),e("li",[v._v("有强制缓存已失效，则使用协商缓存，可用返回"),e("code",[v._v("304")]),v._v(" ，不可用返回新数据和"),e("code",[v._v("200")])])])]),v._v(" "),e("li",[v._v("4、向服务器发送请求，等待响应")]),v._v(" "),e("li",[v._v("5、把响应内容存入 "),e("code",[v._v("disk cache")]),v._v("（如果"),e("code",[v._v("HTTP")]),v._v("头信息配置可存）")]),v._v(" "),e("li",[v._v("6、把 "),e("em",[v._v("响应内容的引用")]),v._v(" 存入 "),e("code",[v._v("memory cache")]),v._v(" （无视"),e("code",[v._v("HTTP")]),v._v("头信息的配置）")]),v._v(" "),e("li",[v._v("7、把响应内容存入"),e("code",[v._v("Service Worker")]),v._v("的"),e("code",[v._v("Cache Storage")]),v._v("（如果"),e("code",[v._v("Service Worker")]),v._v("的脚本调用了"),e("code",[v._v("cache.put()")]),v._v("）")])])]),v._v(" "),e("h2",{attrs:{id:"transfer-encoding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transfer-encoding"}},[v._v("#")]),v._v(" Transfer-Encoding")]),v._v(" "),e("blockquote",[e("p",[v._v("指定报文主体的传输编码方式")])])])}),[],!1,null,null,null);e.default=a.exports}}]);