(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{439:function(a,e,t){"use strict";t.r(e);var s=t(25),c=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#webpack是什么"}},[a._v("webpack是什么")])]),e("li",[e("a",{attrs:{href:"#webpack核心概念"}},[a._v("webpack核心概念")])]),e("li",[e("a",{attrs:{href:"#filename-和-chunkfilename、webpackchunkname"}},[a._v("filename 和 chunkFilename、webpackChunkName")]),e("ul",[e("li",[e("a",{attrs:{href:"#filename"}},[a._v("filename")])]),e("li",[e("a",{attrs:{href:"#chunkfilename"}},[a._v("chunkFilename")])]),e("li",[e("a",{attrs:{href:"#webpackchunkname"}},[a._v("webpackChunkName")])])])]),e("li",[e("a",{attrs:{href:"#webpackprefetch、webpackpreload"}},[a._v("webpackPrefetch、webpackPreload")]),e("ul",[e("li",[e("a",{attrs:{href:"#webpackprefetch"}},[a._v("webpackPrefetch")])]),e("li",[e("a",{attrs:{href:"#webpackpreload"}},[a._v("webpackPreload")])])])]),e("li",[e("a",{attrs:{href:"#hash、chunkhash、contenthash"}},[a._v("hash、chunkhash、contenthash")]),e("ul",[e("li",[e("a",{attrs:{href:"#hash"}},[a._v("hash")])]),e("li",[e("a",{attrs:{href:"#chunkhash"}},[a._v("chunkhash")])]),e("li",[e("a",{attrs:{href:"#contenthash"}},[a._v("contenthash")])])])]),e("li",[e("a",{attrs:{href:"#sourse-map的应用"}},[a._v("sourse-map的应用")])])])]),e("p"),a._v(" "),e("h2",{attrs:{id:"webpack是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack是什么"}},[a._v("#")]),a._v(" webpack是什么")]),a._v(" "),e("blockquote",[e("p",[e("code",[a._v("webpack")]),a._v(" 是一个"),e("code",[a._v("JavaScript")]),a._v("静态模块打包器，当"),e("code",[a._v("webpack")]),a._v("处理应用程序时会递归构建一个依赖关系图，包含程序需要的每个模块，然后将这些模块打包成一个或者多个"),e("code",[a._v("budle")])])]),a._v(" "),e("h2",{attrs:{id:"webpack核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack核心概念"}},[a._v("#")]),a._v(" webpack核心概念")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("核心")]),a._v(" "),e("p",[e("code",[a._v("webpack")]),a._v(" 配置中需要理解的几个核心概念 ："),e("strong",[e("code",[a._v("Entry")])]),a._v("，"),e("strong",[e("code",[a._v("Output")])]),a._v("，"),e("strong",[e("code",[a._v("Loaders")])]),a._v("，"),e("strong",[e("code",[a._v("Plugins")])]),a._v("，"),e("strong",[e("code",[a._v("Chunk")])])]),a._v(" "),e("ul",[e("li",[e("p",[e("strong",[e("code",[a._v("Entry")])]),a._v("：指定"),e("code",[a._v("webpack")]),a._v("开始构建的入口模块，从该模块开始构并计算出直接或间接依赖的模块或者库。")])]),a._v(" "),e("li",[e("p",[e("strong",[e("code",[a._v("Output")])]),a._v("：告诉"),e("code",[a._v("webpack")]),a._v("如何命名输出文件以及输出的目录")])]),a._v(" "),e("li",[e("p",[e("strong",[e("code",[a._v("Loaders")])]),a._v("：由于"),e("code",[a._v("webpack")]),a._v("只能处理"),e("code",[a._v("JavaScript")]),a._v("，所以我们需要将一些非"),e("code",[a._v("js")]),a._v("文件处理成"),e("code",[a._v("webpack")]),a._v("能够处理的模块，比如"),e("code",[a._v(".vue、.scss")]),a._v("等文件。")])]),a._v(" "),e("li",[e("p",[e("strong",[e("code",[a._v("Plugins")])]),a._v("："),e("code",[a._v("plugin")]),a._v("有着很强的能力，从打包优化和压缩，一直到重新定义环境中的变量。辅助"),e("code",[a._v("webpack")]),a._v("更好的按照我们指定的方式打包代码。")])]),a._v(" "),e("li",[e("p",[e("strong",[e("code",[a._v("module")])]),a._v("：我们自己写的代码文件，一个文件就相当于一个模块，不管是css、js都是模块。")])]),a._v(" "),e("li",[e("p",[e("strong",[e("code",[a._v("Chunk")])]),a._v("：当"),e("code",[a._v("webpack")]),a._v("根据我们传入的入口文件将我们写的"),e("code",[a._v("module")]),a._v("进行打包时，会根据文件的引用关系，生成"),e("code",[a._v("chunk")]),a._v("，将一个模块中用到的代码(包括引用的)都生成到一个"),e("code",[a._v("chunk")]),a._v("。额外打包的代码会被单独分出一个文件，实现单独加载，但是属于同一个"),e("code",[a._v("chunk")]),a._v("，"),e("code",[a._v("webpack")]),a._v("会建立内部关系。")])])]),a._v(" "),e("p",[e("code",[a._v("coding split")]),a._v("的产物，我们可以把一些代码打包成一个单独的"),e("code",[a._v("Chunk")]),a._v("，比如某些公共模块、组件、第三方包，更好的利用缓存。或者按需加载某些功能模块，优化加载时间。在"),e("code",[a._v("webpack3")]),a._v("中我们使用"),e("code",[a._v("CommonsChunkPlugin")]),a._v("将一些公共代码分割成一个"),e("code",[a._v("chuak")]),a._v("，实现单独加载。在webpack4中我们使用"),e("code",[a._v("SplitChunksPlugin")])]),a._v(" "),e("ul",[e("li",[e("strong",[e("code",[a._v("bundle")])]),a._v("："),e("code",[a._v("webpack")]),a._v("将"),e("code",[a._v("chunk")]),a._v("文件处理好之后，最终会输出"),e("code",[a._v("bundle")]),a._v("文件，"),e("code",[a._v("bundle")]),a._v("文件包含了经过压缩和编译的最终代码文件，可以直接在浏览器中运行。")])]),a._v(" "),e("p",[a._v("一般来说一个"),e("code",[a._v("chunk")]),a._v("对应一个"),e("code",[a._v("bundle")]),a._v("，但是一个"),e("code",[a._v("chunk")]),a._v("也可以对应多个"),e("code",[a._v("bundle")]),a._v("，比如对于同一个"),e("code",[a._v("chunk")]),a._v("的需要额外抽离的"),e("code",[a._v("css")]),a._v("文件")])]),a._v(" "),e("h2",{attrs:{id:"filename-和-chunkfilename、webpackchunkname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filename-和-chunkfilename、webpackchunkname"}},[a._v("#")]),a._v(" filename 和 chunkFilename、webpackChunkName")]),a._v(" "),e("h3",{attrs:{id:"filename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filename"}},[a._v("#")]),a._v(" filename")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("filename")]),a._v(" "),e("p",[e("code",[a._v("filename")]),a._v("就是打包出来的文件的名称，一般在"),e("code",[a._v("output")]),a._v("对象中会用到，在"),e("code",[a._v("MiniCssExtractPlugin")]),a._v("额外提取CSS插件中也会用到，"),e("code",[a._v("output.filename")]),a._v("的输出文件名是"),e("code",[a._v("[name].min.js")]),a._v(","),e("code",[a._v("[name]")]),a._v("代表入口名称。")])]),a._v(" "),e("h3",{attrs:{id:"chunkfilename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chunkfilename"}},[a._v("#")]),a._v(" chunkFilename")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("chunkFilename")]),a._v(" "),e("p",[e("code",[a._v("chunkFilename")]),a._v("指的是不在"),e("code",[a._v("entry")]),a._v("中，却需要额外被打包出来的文件的名称，一般是需要懒加载的模块，比如"),e("code",[a._v("loadsh")]),a._v("文件。当"),e("code",[a._v("output.chunkFilename")]),a._v("没有被指定时，默认就会把chunk文件的id号当成前缀，比如"),e("code",[a._v("1.min.js")]),a._v("。")])]),a._v(" "),e("h3",{attrs:{id:"webpackchunkname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackchunkname"}},[a._v("#")]),a._v(" webpackChunkName")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("webpackChunkName")]),a._v(" "),e("p",[a._v("对于多个需要异步加载的文件，如果写成"),e("code",[a._v("[name].bundle.js")]),a._v(",就会打包出"),e("code",[a._v("1.bundle.js")]),a._v("这种辨识度不高的文件名称，区分起来十分困难，这时候就可以用"),e("code",[a._v("webpackChunkName")]),a._v("注释 来标识异步加载的文件名：在import导入的时候，以注释的方式为引入的文件起别名，比如"),e("code",[a._v("await import(/* webpackChunkName: \"lodash\" */ 'lodash')")]),a._v(",这样打包出来的就是"),e("code",[a._v("vendors~lodash.bundle.js")]),a._v("，"),e("code",[a._v("vendors~")]),a._v("的前缀是"),e("code",[a._v("webpack")]),a._v("的懒加载插件"),e("code",[a._v("SplitChunksPlugin")]),a._v("里的默认配置增加的。")]),a._v(" "),e("p",[e("code",[a._v("webpackChunkName")]),a._v("就是为预加载的文件取别名")])]),a._v(" "),e("h2",{attrs:{id:"webpackprefetch、webpackpreload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackprefetch、webpackpreload"}},[a._v("#")]),a._v(" webpackPrefetch、webpackPreload")]),a._v(" "),e("h3",{attrs:{id:"webpackprefetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackprefetch"}},[a._v("#")]),a._v(" webpackPrefetch")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("webpackPrefetch")]),a._v(" "),e("p",[a._v("预获取配置。对于懒加载的文件，只有我们需要的时候才会引入，比如点击按钮加载"),e("code",[a._v("loadsh")]),a._v("，只有点击的时候才会才会加载"),e("code",[a._v("lodash")]),a._v("：懒加载时，会动态创建一个"),e("code",[a._v("script")]),a._v("标签，被添加到"),e("code",[a._v("head")]),a._v("头里加载资源。如果我们在"),e("code",[a._v("import")]),a._v("的时候添加"),e("code",[a._v("webpackPrefetch")]),a._v("注释，会将需要预获取的文件在请求中优先级变为"),e("code",[a._v("Lowest")]),a._v("，不会等到点击按钮的时候再加载文件，而会在父"),e("code",[a._v("chunk")]),a._v("文件加载完成后，空闲时加载"),e("code",[a._v("lodash")]),a._v("文件。")]),a._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("link")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rel")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("prefetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("as")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("vendors-loadsh.bundle.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])])]),a._v(" "),e("h3",{attrs:{id:"webpackpreload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackpreload"}},[a._v("#")]),a._v(" webpackPreload")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("webpackPreload")]),a._v(" "),e("p",[a._v("需要在"),e("code",[a._v("webpack")]),a._v("中使用"),e("code",[a._v("preload-webpack-plugin")]),a._v("插件，并在需要预先加载的添加"),e("code",[a._v("/* webpackPreload: true */")]),a._v("来实现预加载配置。加了"),e("code",[a._v("webpackPreload")]),a._v("注释的"),e("code",[a._v("chunk")]),a._v("会在父"),e("code",[a._v("chunk")]),a._v("加载时，以并行的方式加载,将需要预加载的文件在请求中优先级提升到"),e("code",[a._v("High")]),a._v("。原理是利用"),e("code",[a._v("link")]),a._v("标签也能加载"),e("code",[a._v("js")]),a._v("的原理，并增加"),e("code",[a._v("preload")]),a._v("属性，来实现的预加载。")]),a._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("link")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("rel")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("preload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("as")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("script"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("title.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])])]),a._v(" "),e("h2",{attrs:{id:"hash、chunkhash、contenthash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash、chunkhash、contenthash"}},[a._v("#")]),a._v(" hash、chunkhash、contenthash")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),e("p",[a._v("哈希一般都是配合"),e("code",[a._v("CDN")]),a._v("缓存来使用的。如果文件内容改变了，那么文件的哈希值也会改变，对应的"),e("code",[a._v("HTML")]),a._v("引用的"),e("code",[a._v("URL")]),a._v("地址也会改变，用户请求时，"),e("code",[a._v("CDN")]),a._v("服务器发现文件哈希更新了，会从源服务器上拉取对应的数据，更新本地缓存")])]),a._v(" "),e("h3",{attrs:{id:"hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[a._v("#")]),a._v(" hash")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("hash")]),a._v(" "),e("p",[e("code",[a._v("hash")]),a._v("的计算是跟项目的构建相关的，项目每次构建都会生成一个新的构建"),e("code",[a._v("hash")]),a._v("值，输出的文件名中如果带有"),e("code",[a._v("hash")]),a._v("值"),e("code",[a._v("[name].[hash].js")]),a._v(",打包出的文件就会带上项目构建生成的"),e("code",[a._v("hash")]),a._v("，比如"),e("code",[a._v("index.def5949da1857d01b87e.js")]),a._v("。")])]),a._v(" "),e("h3",{attrs:{id:"chunkhash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chunkhash"}},[a._v("#")]),a._v(" chunkhash")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("chunkhash")]),a._v(" "),e("p",[a._v("如果都以"),e("code",[a._v("hash")]),a._v("来命名，那么每次打包，都会生成新的"),e("code",[a._v("hash")]),a._v("，这样所有资源的名字都会变，对于内容没有改变的文件，就失去了"),e("code",[a._v("CDN")]),a._v("缓存的作用。"),e("code",[a._v("chunkhash")]),a._v("就解决了这个问题，根据不同的入口文件进行依赖解析、构建对应的"),e("code",[a._v("chunk")]),a._v("，生成不同的"),e("code",[a._v("chunkhash")]),a._v("。当有文件改变时，只有属于同一个"),e("code",[a._v("chunk")]),a._v("的文件名称才会改变。")])]),a._v(" "),e("h3",{attrs:{id:"contenthash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contenthash"}},[a._v("#")]),a._v(" contenthash")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("contenthash")]),a._v(" "),e("p",[a._v("使用"),e("code",[a._v("chunkhash")]),a._v("时，其中有一个文件改变了，会生成新的"),e("code",[a._v("chunkhash")]),a._v("，那么属于同一个"),e("code",[a._v("chunk")]),a._v("的其他文件的名称也会变，但是其他文件并没有发生变化，这样也会浪费"),e("code",[a._v("CDN")]),a._v("缓存。"),e("code",[a._v("contenthash")]),a._v("就是解决这个问题的，"),e("code",[a._v("contenthash")]),a._v("是根据文件内容生成的唯一"),e("code",[a._v("hash")]),a._v("值，当文件内容不改变时，"),e("code",[a._v("contenthash")]),a._v("不会改变。一般额外提取出来的"),e("code",[a._v("css")]),a._v("会使用"),e("code",[a._v("contenthash")]),a._v("作为名称。")])]),a._v(" "),e("h2",{attrs:{id:"sourse-map的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sourse-map的应用"}},[a._v("#")]),a._v(" sourse-map的应用")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("sourse-map")]),a._v(" "),e("p",[e("code",[a._v("sourse-map")]),a._v(",就是一份源码和转换后代码的映射文件。")]),a._v(" "),e("p",[e("code",[a._v("devtool")]),a._v("常用值：")]),a._v(" "),e("ul",[e("li",[a._v("1、"),e("code",[a._v("source-map")]),a._v(":大而全，啥都有，"),e("code",[a._v("webpack")]),a._v("构建时间变长，看情况使用。")]),a._v(" "),e("li",[a._v("2、"),e("code",[a._v("cheap-sourse-map")]),a._v(":"),e("code",[a._v("cheap")]),a._v("，就是廉价的意思，只会映射到行，没有列的映射，而且是转换过的代码。响应的体积会小很多。")]),a._v(" "),e("li",[a._v("3、"),e("code",[a._v("cheap-module-eval-source-map")]),a._v(":开发环境可使用，在构建速度报错提醒上做了比较好的均衡。")]),a._v(" "),e("li",[a._v("4、"),e("code",[a._v("cheap-module-source-map")]),a._v(":线上环境一般是不配置"),e("code",[a._v("source-map")]),a._v("的，如果想要捕捉线上的代码报错，可以用这个。")])]),a._v(" "),e("p",[a._v("开发环境一般使用"),e("code",[a._v("cheap-module-eval-source-map")]),a._v("或者"),e("code",[a._v("cheap-sourse-map")]),a._v("，区别如下\n"),e("img",{attrs:{src:a.$withBase("/assets/webpack-devtool.png"),alt:"webpack-devtool"}})])])])}),[],!1,null,null,null);e.default=c.exports}}]);