(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{358:function(v,_,t){"use strict";t.r(_);var e=t(25),a=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#伪类"}},[v._v("伪类")])]),_("li",[_("a",{attrs:{href:"#伪元素"}},[v._v("伪元素")]),_("ul",[_("li",[_("a",{attrs:{href:"#伪类和伪元素的区别"}},[v._v("伪类和伪元素的区别")])])])]),_("li",[_("a",{attrs:{href:"#伪元素是使用单冒号还是双冒号"}},[v._v("伪元素是使用单冒号还是双冒号")])])])]),_("p"),v._v(" "),_("h1",{attrs:{id:"_6、css伪类、伪元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、css伪类、伪元素"}},[v._v("#")]),v._v(" 6、CSS伪类、伪元素")]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("css")]),v._v("引入伪类和伪元素概念是为了格式化文档树以外的信息。也就是说，伪类和伪元素是用来修饰不在文档树中的部分，比如，一句话中的第一个字母，或者是列表中的第一个元素。")])]),v._v(" "),_("h2",{attrs:{id:"伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[v._v("#")]),v._v(" 伪类")]),v._v(" "),_("blockquote",[_("p",[v._v("用于当已有元素处于某个DOM树无法描述的状态时为其添加对应的样式，这个状态是根据用户行为而动态变化的。比如，当用户悬停在指定的元素时，我们可以用 "),_("code",[v._v(": hover")]),v._v("来描述这个元素的状态。虽然和普通的"),_("code",[v._v("css")]),v._v("类似，可以为已有的元素添加样式，但是它只有处于dom树无法描述的状态下才能为元素添加样式，所以将其称之为伪类；")])]),v._v(" "),_("h2",{attrs:{id:"伪元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[v._v("#")]),v._v(" 伪元素")]),v._v(" "),_("blockquote",[_("p",[v._v("伪元素用于创建一些不在文档树中的元素，并为其添加样式。比如，可以通过"),_("code",[v._v(":before")]),v._v("来在一个元素前增加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本，但是这些文本实际上并不在"),_("code",[v._v("DOM")]),v._v("树中。")])]),v._v(" "),_("h3",{attrs:{id:"伪类和伪元素的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪类和伪元素的区别"}},[v._v("#")]),v._v(" 伪类和伪元素的区别")]),v._v(" "),_("blockquote",[_("p",[v._v("伪类的操作对象是"),_("code",[v._v("DOM")]),v._v("树中已有的元素，而伪元素则创建了一个"),_("code",[v._v("dom")]),v._v("树之外的元素。")]),v._v(" "),_("p",[v._v("因此，伪类和伪元素的区别在于：有没有创建一个"),_("code",[v._v("DOM")]),v._v("树之外的元素；")])]),v._v(" "),_("h2",{attrs:{id:"伪元素是使用单冒号还是双冒号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪元素是使用单冒号还是双冒号"}},[v._v("#")]),v._v(" 伪元素是使用单冒号还是双冒号")]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("CSS3")]),v._v("规范中的要求使用双冒号"),_("code",[v._v("::")]),v._v("表示伪元素，以此来区分伪元素和伪类。")]),v._v(" "),_("p",[v._v("比如"),_("code",[v._v("::before")]),v._v("和"),_("code",[v._v("::after")]),v._v("等伪元素使用双冒号"),_("code",[v._v("::")]),v._v("，"),_("code",[v._v(":hover")]),v._v("和"),_("code",[v._v(":active")]),v._v("等伪类使用单冒号"),_("code",[v._v(":")]),v._v("。除了一些低于IE8版本的浏览器外，大部分浏览器都支持伪元素的双冒号"),_("code",[v._v("::")]),v._v("表示方法。")]),v._v(" "),_("p",[v._v("然而，除了少部分伪元素，如"),_("code",[v._v("::backdrop")]),v._v("必须使用双冒号，大部分伪元素都支持单冒号和双冒号的写法，比如"),_("code",[v._v("::after")]),v._v("，写成"),_("code",[v._v(":after")]),v._v("也可以正确运行。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);