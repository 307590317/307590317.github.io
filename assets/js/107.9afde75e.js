(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{423:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#vue核心知识点"}},[t._v("Vue核心知识点")])]),a("li",[a("a",{attrs:{href:"#框架的模式"}},[t._v("框架的模式")])]),a("li",[a("a",{attrs:{href:"#vue的使用方式"}},[t._v("vue的使用方式")]),a("ul",[a("li",[a("a",{attrs:{href:"#跑环境"}},[t._v("跑环境")])])])]),a("li",[a("a",{attrs:{href:"#vue的双向数据绑定原理"}},[t._v("vue的双向数据绑定原理")])]),a("li",[a("a",{attrs:{href:"#vue的生命周期与钩子函数"}},[t._v("vue的生命周期与钩子函数")])]),a("li",[a("a",{attrs:{href:"#初始化vue时传入对象中的属性"}},[t._v("初始化vue时传入对象中的属性")]),a("ul",[a("li",[a("a",{attrs:{href:"#el"}},[t._v("el")])]),a("li",[a("a",{attrs:{href:"#data"}},[t._v("data")])]),a("li",[a("a",{attrs:{href:"#methods"}},[t._v("methods")])]),a("li",[a("a",{attrs:{href:"#filters"}},[t._v("filters")])]),a("li",[a("a",{attrs:{href:"#computed"}},[t._v("computed")])]),a("li",[a("a",{attrs:{href:"#watch"}},[t._v("watch")])]),a("li",[a("a",{attrs:{href:"#computed-与-method-的区别"}},[t._v("computed 与 method 的区别")])]),a("li",[a("a",{attrs:{href:"#什么时候用computed什么时候用watch"}},[t._v("什么时候用computed什么时候用watch")])])])]),a("li",[a("a",{attrs:{href:"#vue的实例拥有的属性"}},[t._v("vue的实例拥有的属性")]),a("ul",[a("li",[a("a",{attrs:{href:"#为什么data中的属性会出现响应式的变化"}},[t._v("为什么data中的属性会出现响应式的变化?")])])])]),a("li",[a("a",{attrs:{href:"#jquery-和-vue-的区别"}},[t._v("jQuery 和 Vue 的区别")])]),a("li",[a("a",{attrs:{href:"#vue3-0-为什么放弃了-object-defineproperty-而采用了-proxy"}},[t._v("Vue3.0 为什么放弃了 Object.defineProperty 而采用了 Proxy?")])])])]),a("p"),t._v(" "),a("h1",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("渐进式框架\n声明式渲染（无需关心如何实现）、组件化开发、客户端路由（"),a("code",[t._v("vue-router")]),t._v("）、大规模的数据状态（"),a("code",[t._v("vuex")]),t._v("）、构建工具（"),a("code",[t._v("vue-cli")]),t._v("）\n全家桶："),a("code",[t._v("vue.js")]),t._v(" + "),a("code",[t._v("vue-router")]),t._v(" + "),a("code",[t._v("vuex+vue-cli")]),t._v(" + "),a("code",[t._v("axios")])])]),t._v(" "),a("h2",{attrs:{id:"vue核心知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue核心知识点"}},[t._v("#")]),t._v(" Vue核心知识点")]),t._v(" "),a("blockquote",[a("p",[t._v("数据驱动(主要操作的是数据)")]),t._v(" "),a("p",[t._v("数据变化会导致视图自动更新")]),t._v(" "),a("p",[t._v("组件化开发")])]),t._v(" "),a("h2",{attrs:{id:"框架的模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架的模式"}},[t._v("#")]),t._v(" 框架的模式")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("模式")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("MVC")]),t._v("单向的数据绑定\n"),a("ul",[a("li",[t._v("只能通过改变数据来改变视图")]),t._v(" "),a("li",[a("img",{attrs:{src:t.$withBase("/assets/vue-1-1.png"),alt:"vue-1-1"}})])])])]),t._v(" "),a("p",[a("code",[t._v("MVVM")]),t._v(" 双向的数据绑定")]),t._v(" "),a("ul",[a("li",[t._v("视图发生改变，数据也会跟着变")]),t._v(" "),a("li",[t._v("数据发生改变，视图也会跟着改变")])])]),t._v(" "),a("h2",{attrs:{id:"vue的使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的使用方式"}},[t._v("#")]),t._v(" vue的使用方式")]),t._v(" "),a("blockquote",[a("p",[t._v("1、采用cdn："),a("code",[t._v('<script src="https://unpkg.com/vue"><\/script>')])]),t._v(" "),a("p",[t._v("2、在需要的项目中安装"),a("code",[t._v("vue")]),t._v("模块 "),a("code",[t._v("npm install vue")]),t._v("，安装之后导入"),a("code",[t._v("vue.js")]),t._v("文件")])]),t._v(" "),a("h3",{attrs:{id:"跑环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跑环境"}},[t._v("#")]),t._v(" 跑环境")]),t._v(" "),a("blockquote",[a("p",[t._v("初始化"),a("code",[t._v("package.json")]),t._v("文件，在项目中执行"),a("code",[t._v("npm init -y")]),t._v("可自动生成一个默认的"),a("code",[t._v("package.json")]),t._v("文件；")]),t._v(" "),a("p",[t._v("由于项目依赖的模块较大，每次上传下载同步都很浪费时间，所以我们只需要上传"),a("code",[t._v("package.json")]),t._v("文件，里面写了所有的依赖模块，我们同步下来之后只需要在需要的项目中打开"),a("code",[t._v("cmd")]),t._v("窗口执行"),a("code",[t._v("npm install")]),t._v("，就可以把项目依赖的模块下载到；")])]),t._v(" "),a("h2",{attrs:{id:"vue的双向数据绑定原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的双向数据绑定原理"}},[t._v("#")]),t._v(" vue的双向数据绑定原理")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("双向绑定原理")]),t._v(" "),a("p",[a("code",[t._v("Vue")]),t._v("采用数据劫持+发布订阅的方式来实现 数据的双向绑定。")]),t._v(" "),a("p",[t._v("先使用"),a("code",[t._v("Object.defineProperty")]),t._v("方法劫持数据的"),a("code",[t._v("get")]),t._v("和"),a("code",[t._v("set")]),t._v("属性（"),a("code",[t._v("get")]),t._v("用来依赖收集，"),a("code",[t._v("setter")]),t._v("用来派发更新），当数据发生变化时，通过发布订阅模式来通知订阅者，触发对应的监听回调。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("  obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ceshi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lily"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//借助中间对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" input1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"box2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//视图")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对某一个对象使用了Object.defineProperty方法之后就要写对应的get和set方法了，不然无法像操作普通对象一样访问或者设置它的属性")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此方法不兼容IE8及以下")]),t._v("\n  Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性是否可删除")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性是否可修改")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性是否可枚举")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取obj的属性名对应的属性值时会调用该方法")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*2*/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置obj的属性名对应的属性值时会调用此方法")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现视图变化数据跟着变：分两步，上面get中的为第二步（即再次读取的时候会调用get方法得到之前设置的值，以此来实现动态改变）")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//由于直接写obj.name = this.value;会导致循环调用set方法，所以要借助中间对象的形式把值赋给中间对象，获取obj.name的时候我们获取中间对象的最新值即可")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*1、*/")]),t._v(" temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现数据变化视图改变")]),t._v("\n      input1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//为了初始化的时候让视图中（文本框中）有值：出现obj.name说明要访问这个属性就会用到defineProperty中的get方法")]),t._v("\n  input1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现视图改变数据跟着改变")]),t._v("\n  input1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当值变化时会调用set方法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"vue的生命周期与钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期与钩子函数"}},[t._v("#")]),t._v(" vue的生命周期与钩子函数")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("生命周期")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("beforeCreate")]),t._v("："),a("code",[t._v("el")]),t._v(" 和 "),a("code",[t._v("data")]),t._v(" 并未初始化 （此方法不常用）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("created")]),t._v("：执行此方法时已经，完成了 "),a("code",[t._v("data")]),t._v(" 数据的初始化，"),a("code",[t._v("el")]),t._v(" 的初始化未完成。常在这个钩子函数中 发送"),a("code",[t._v("ajax")]),t._v("来获取数据")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("beforeMount")]),t._v("：（执行此方法时已经完成了 "),a("code",[t._v("el")]),t._v(" 和 "),a("code",[t._v("data")]),t._v(" 初始化 （已经赋予了对应的值））")]),t._v(" "),a("ul",[a("li",[t._v("渲染"),a("code",[t._v("DOM")]),t._v("之前先确认下是否有要编译的根元素（有无"),a("code",[t._v("el")]),t._v("属性），有才继续确认是否具有模板属性"),a("code",[t._v("template")]),t._v(",如果有模版属性，则会用"),a("code",[t._v("template")]),t._v("的值替换掉HTML中的结构，"),a("code",[t._v("template")]),t._v("模版中只能有一个根元素（而且不能是文本）；")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("mounted")]),t._v("：（执行此方法时代表已经挂载结束了）")]),t._v(" "),a("ul",[a("li",[t._v("把编译好的数据挂载到"),a("code",[t._v("DOM")]),t._v("元素上，最后渲染成真实的"),a("code",[t._v("DOM")]),t._v("元素；真实"),a("code",[t._v("DOM")]),t._v("已经渲染完成，可以操作"),a("code",[t._v("DOM")]),t._v("了")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("beforeUpdate")]),t._v("：当页面依赖的数据更改之后触发（此时"),a("code",[t._v("DOM")]),t._v("结构还没有重新加载）")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("updated")]),t._v("："),a("code",[t._v("DOM")]),t._v("结构重新加载之后触发")])])]),t._v(" "),a("p",[t._v("调用"),a("code",[t._v("vm.$destroy()")]),t._v("之后触发下面两个事件：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("beforeDestroy")]),t._v("：实例销毁之前调用。在这一步，实例仍然完全可用。（可在此处清除定时器，清除事件绑定）")]),t._v(" "),a("li",[a("code",[t._v("destroyed")]),t._v("："),a("code",[t._v("Vue")]),t._v(" 实例销毁后调用。调用后，"),a("code",[t._v("Vue")]),t._v(" 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。（意义不大）")])])]),t._v(" "),a("h2",{attrs:{id:"初始化vue时传入对象中的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化vue时传入对象中的属性"}},[t._v("#")]),t._v(" 初始化vue时传入对象中的属性")]),t._v(" "),a("h3",{attrs:{id:"el"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el"}},[t._v("#")]),t._v(" "),a("code",[t._v("el")])]),t._v(" "),a("blockquote",[a("p",[t._v("表示"),a("code",[t._v("vue")]),t._v("的属性和方法对哪个"),a("code",[t._v("DOM")]),t._v("根元素起作用（对它的后代元素也起作用）")])]),t._v(" "),a("h3",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" "),a("code",[t._v("data")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("data")]),t._v("中的内容表示需要双向绑定时用到的数据，写在"),a("code",[t._v("data")]),t._v("中的属性都会挂载到当前"),a("code",[t._v("Vue")]),t._v("的实例上；（可以直接用"),a("code",[t._v("vm.msg")]),t._v("来调用）；")])]),t._v(" "),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" "),a("code",[t._v("methods")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("methods")]),t._v("中的方法也将挂载到"),a("code",[t._v("Vue")]),t._v("的实例上。可以直接通过"),a("code",[t._v("vm")]),t._v("实例访问这些方法，或者在指令表达式中使用。方法中的 "),a("code",[t._v("this")]),t._v(" 自动绑定为 "),a("code",[t._v("Vue")]),t._v("的实例。")]),t._v(" "),a("p",[t._v("在"),a("em",[t._v("指令表达式中")]),t._v("使用方法的时候，如果方法名后面不写括号，则会默认传入事件对象"),a("code",[t._v("MouseEvent")]),t._v("。写括号代表要传递参数，而不是直接执行，要手动传入事件对象"),a("code",[t._v("$event")]),t._v("。")]),t._v(" "),a("p",[a("em",[t._v("注意：")])]),t._v(" "),a("ul",[a("li",[t._v("1、"),a("code",[t._v("methods")]),t._v("中的方法名不能和"),a("code",[t._v("data")]),t._v("中的变量名一样，因为都会挂载到"),a("code",[t._v("vue")]),t._v("的实例上，重名会报错")]),t._v(" "),a("li",[t._v("2、不应该使用箭头函数来定义"),a("code",[t._v("method")]),t._v("中的方法，因为使用箭头函数会改变函数中的"),a("code",[t._v("this")]),t._v("，而我们要保证方法中的"),a("code",[t._v("this")]),t._v("都是"),a("code",[t._v("vue")]),t._v("的实例")]),t._v(" "),a("li",[t._v("3、"),a("code",[t._v("{{}}")]),t._v("中执行"),a("code",[t._v("method")]),t._v("中的方法，方法后面必须要加"),a("code",[t._v("()")]),t._v("，才代表执行")])])]),t._v(" "),a("h3",{attrs:{id:"filters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filters"}},[t._v("#")]),t._v(" "),a("code",[t._v("filters")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("允许你在"),a("code",[t._v("filters")]),t._v("中定义自己的过滤器，可被用于一些常见的文本格式化。过滤器可以用在两个地方：双花括号中和 "),a("code",[t._v("v-bind")]),t._v(" 表达式 (后者从 2.1.0+ 开始支持)。过滤器应该被添加在 "),a("code",[t._v("JavaScript")]),t._v(" 表达式的尾部，由“管道”符号“"),a("code",[t._v("｜")]),t._v("”来指示；")]),t._v(" "),a("p",[a("em",[t._v("注意:")])]),t._v(" "),a("ul",[a("li",[t._v("1、"),a("code",[t._v("filters")]),t._v("方法中的"),a("code",[t._v("this")]),t._v("都是"),a("code",[t._v("window")])]),t._v(" "),a("li",[t._v("2、"),a("code",[t._v("｜")]),t._v(" 后面的方法执行的时候，会默认的把 "),a("code",[t._v("｜")]),t._v("之前的值当作第一个参数传递给"),a("code",[t._v("｜")]),t._v("后面的方法 ;")]),t._v(" "),a("li",[t._v("3、"),a("code",[t._v("filters")]),t._v("中的方法在"),a("code",[t._v("{{}}")]),t._v("中执行的时候，可以不写括号；")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在双花括号中 --\x3e")]),t._v("\n\t{{ message | toFixed(2)}} toFixed方法执行时不改变原数据，只是改变message的显示效果\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在 `v-bind` 中 --\x3e")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("rawId | toFixed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filters")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pra")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'￥'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pra"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("h3",{attrs:{id:"computed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" "),a("code",[t._v("computed")])]),t._v(" "),a("blockquote",[a("p",[t._v("计算属性（会有缓存），不是方法：某一个属性的值依赖于其他值的改变而改变时，可使用"),a("code",[t._v("computed")]),t._v("，把需要绑定的属性写在"),a("code",[t._v("computed")]),t._v("中，只会跟依赖的值产生关系。属性中默认会有"),a("code",[t._v("set")]),t._v("和"),a("code",[t._v("get")]),t._v("方法，如果把计算属性写成函数，则默认只调用"),a("code",[t._v("get")]),t._v("方法（"),a("code",[t._v("get")]),t._v("方法必须要有返回值）；\n"),a("code",[t._v("computed")]),t._v("不支持异步：因为如果有异步操作导致结果不确定，缓存会失效，而且无法同步获取结果，会导致问题。")])]),t._v(" "),a("h3",{attrs:{id:"watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[t._v("#")]),t._v(" "),a("code",[t._v("watch")])]),t._v(" "),a("blockquote",[a("p",[t._v("监听属性（默认只监控所给属性的第一层）："),a("code",[t._v("watch")]),t._v("中的方法名应该与"),a("code",[t._v("data")]),t._v("中的要监听的属性名相同。只有当 "),a("em",[t._v("监听的值发生变化")]),t._v(" 的时候才会触发对应的方法；"),a("code",[t._v("watch")]),t._v("支持异步，当需要异步的时候，"),a("code",[t._v("watch")]),t._v("还支持设置中间状态；")]),t._v(" "),a("p",[t._v("如果想要深度监控，则需要写为对象的形式，并且修改"),a("code",[t._v("deep：true")]),t._v("来实现深度监控，还可以添加"),a("code",[t._v("immediate:true")]),t._v("属性，"),a("code",[t._v("immediate")]),t._v("的作用：在第一次绑定的时候就会触发"),a("code",[t._v("watch")]),t._v("监听；")])]),t._v(" "),a("h3",{attrs:{id:"computed-与-method-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-与-method-的区别"}},[t._v("#")]),t._v(" computed 与 method 的区别")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("ul",[a("li",[t._v("1、缓存：计算属性会根据依赖的属性（归"),a("code",[t._v("vue")]),t._v("管理的数据，可以响应式的变化）进行缓存，只有在它的相关依赖发生改变时才会重新求值；")]),t._v(" "),a("li",[t._v("2、在"),a("code",[t._v("{{}}")]),t._v("中使用的时候，方法名后必须要加"),a("code",[t._v("()")]),t._v("来执行，而计算属性如果不需要传递参数，则不需要写"),a("code",[t._v("()")]),t._v("；")]),t._v(" "),a("li",[t._v("3、方法是不管数据有没有发生改变，都会重新计算，且"),a("code",[t._v("get")]),t._v("方法必须有返回值；")])])]),t._v(" "),a("h3",{attrs:{id:"什么时候用computed什么时候用watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用computed什么时候用watch"}},[t._v("#")]),t._v(" 什么时候用computed什么时候用watch")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("当数据依赖于多个值的改变而改变时，我们就需要用"),a("code",[t._v("computed")]),t._v("；")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" {{fullName}}\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("firstName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhaoyu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lastName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zy'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fullName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只要依赖的其中一个值改变，就会执行此方法；")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当监听的值发生改变的时候，数据需要跟着变，就要用"),a("code",[t._v("watch")]),t._v("，需要异步操作的时候，就必须用"),a("code",[t._v("watch")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("firstName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhaoyu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lastName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fullName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//val的值改变了才会触发下面的方法,而且会默认传入两个参数，新的值和老的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("oldV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fullName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果写成一个函数的形式（如上的形式），则只会监控第一层级属性对应的值，第一层级的值发生改变才会触发函数执行；如果要实现深度监控，则要写成如下对象的形式,将deep深度监控属性赋值为true；")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监控时发生改变就会触发此方法，方法名必须是handler")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("immediate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一次绑定的时候就触发watch ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("{{}}")]),t._v("：其中可放表达式、可以放赋值运算、计算、三元运算符（尽量少写逻辑运算）")])]),t._v(" "),a("h2",{attrs:{id:"vue的实例拥有的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的实例拥有的属性"}},[t._v("#")]),t._v(" vue的实例拥有的属性")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("vue实例属性")]),t._v(" "),a("p",[t._v("此处的"),a("code",[t._v("this")]),t._v("是"),a("code",[t._v("vue")]),t._v("的实例")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("this.$data")]),t._v(" vm上的响应式的数据，是个对象")]),t._v(" "),a("li",[a("code",[t._v("this.$watch")]),t._v(" 监控data中的数据，在变化时可执行对应的回调函数")]),t._v(" "),a("li",[a("code",[t._v("this.$el")]),t._v(" 挂载的"),a("code",[t._v("DOM")]),t._v("根元素")]),t._v(" "),a("li",[a("code",[t._v("this.$set")]),t._v(" 后加的属性实现响应式变化的方法")]),t._v(" "),a("li",[a("code",[t._v("this.$nextTick(()=>{})")]),t._v("  异步方法，渲染"),a("code",[t._v("DOM")]),t._v("完成后获取到需要的最新的数据")]),t._v(" "),a("li",[a("code",[t._v("this.$refs.xxx")]),t._v(" 获取"),a("code",[t._v("ref")]),t._v("值为"),a("code",[t._v("xxx")]),t._v("的"),a("code",[t._v("vue")]),t._v("对象（可通过"),a("code",[t._v("this.$refs.xxx.$el")]),t._v("获取"),a("code",[t._v("DOM")]),t._v("元素）（通过"),a("code",[t._v("v-for")]),t._v("循环出来的可以获取多个，否则只能获取一个）")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 尽管有 prop 和 事件，但是有时仍然需要在 JavaScript 中直接访问子组件。为此可以使用 ref 为子组件指定一个引用的值。如： --\x3e")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("user-profile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("profile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("user-profile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[a("em",[t._v("注意")]),t._v("："),a("code",[t._v("DOM")]),t._v("渲染是异步的，如果数据变化后想要获取最新的真实"),a("code",[t._v("dom")]),t._v("中的内容，需要等待页面渲染完成后再去获取，所有的"),a("code",[t._v("DOM")]),t._v("操作最好放在"),a("code",[t._v("nextTick")]),t._v("方法中异步来获取最新的"),a("code",[t._v("DOM")]),t._v(";")])]),t._v(" "),a("h3",{attrs:{id:"为什么data中的属性会出现响应式的变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么data中的属性会出现响应式的变化"}},[t._v("#")]),t._v(" 为什么data中的属性会出现响应式的变化?")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("data 数据的响应式")]),t._v(" "),a("p",[a("code",[t._v("vue")]),t._v("会循环"),a("code",[t._v("data")]),t._v("中的属性，依次增加"),a("code",[t._v("getter")]),t._v("和"),a("code",[t._v("setter")]),t._v("方法，来实现响应式的变化。（只要是初始化时"),a("code",[t._v("data")]),t._v("中存在的属性都会被增加"),a("code",[t._v("getter")]),t._v("和"),a("code",[t._v("setter")]),t._v("方法，后来添加的属性不会实现双向数据绑定。下面的例子中属性"),a("code",[t._v("a")]),t._v("中没有"),a("code",[t._v("school")]),t._v("属性，所以修改"),a("code",[t._v("vm.a.school")]),t._v("的属性值不会导致视图刷新。）")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("this.$set")]),t._v("可以给对象或数组添加响应式的数据变化例如：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("this.$set(this.a,'school',1)")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app-3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ceshi'")]),t._v("，\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 页面中使用 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n{{a.school}}\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"jquery-和-vue-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jquery-和-vue-的区别"}},[t._v("#")]),t._v(" "),a("code",[t._v("jQuery")]),t._v(" 和 "),a("code",[t._v("Vue")]),t._v(" 的区别")]),t._v(" "),a("blockquote",[a("p",[t._v("jQuery通过选择器来获取DOM对象并对其进行赋值、取值、绑定事件等操作，其数据和视图是在一起的。而Vue通过Vue对象将数据和视图分离开来。对数据进行操作不需要引用DOM对象，而其内部又实现了数据的双向绑定，我们只需要关注数据的变化即可，这就是MVVM模式。")])]),t._v(" "),a("h2",{attrs:{id:"vue3-0-为什么放弃了-object-defineproperty-而采用了-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3-0-为什么放弃了-object-defineproperty-而采用了-proxy"}},[t._v("#")]),t._v(" "),a("code",[t._v("Vue3.0")]),t._v(" 为什么放弃了 "),a("code",[t._v("Object.defineProperty")]),t._v(" 而采用了 "),a("code",[t._v("Proxy")]),t._v("?")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Object.defineProperty")]),t._v("只能劫持对象的属性，因此我们需要对每一个对象的属性都依次遍历。在"),a("code",[t._v("Vue 2.x")]),t._v("中，是采用 递归+遍历的方式来实现对数据的监控的，如果属性值也是对象，则需要进行深度遍历，显然，如果能劫持一个完整的对象才是更好的选择。"),a("code",[t._v("Proxy")]),t._v("可以劫持完整的对象，并返回一个新的对象。"),a("code",[t._v("Proxy")]),t._v("不仅可以代理对象，还可以代理数组。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);