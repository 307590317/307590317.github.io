(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{386:function(v,_,e){"use strict";e.r(_);var t=e(25),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#轮询"}},[v._v("轮询")]),_("ul",[_("li",[_("a",{attrs:{href:"#ajax轮询-短轮询"}},[v._v("ajax轮询（短轮询）")])]),_("li",[_("a",{attrs:{href:"#long-polling-长轮询"}},[v._v("long polling（长轮询）")])]),_("li",[_("a",{attrs:{href:"#小结"}},[v._v("小结")])])])]),_("li",[_("a",{attrs:{href:"#长连接和短连接"}},[v._v("长连接和短连接")])]),_("li",[_("a",{attrs:{href:"#websocket"}},[v._v("websocket")])])])]),_("p"),v._v(" "),_("h1",{attrs:{id:"_32、实时信息传递的方式对比"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_32、实时信息传递的方式对比"}},[v._v("#")]),v._v(" 32、实时信息传递的方式对比")]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("ajax")]),v._v("轮询，长轮询("),_("code",[v._v("long polling")]),v._v(")，"),_("code",[v._v("websocket")]),v._v("都可以实现实时信息传递")])]),v._v(" "),_("h2",{attrs:{id:"轮询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#轮询"}},[v._v("#")]),v._v(" 轮询")]),v._v(" "),_("h3",{attrs:{id:"ajax轮询-短轮询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ajax轮询-短轮询"}},[v._v("#")]),v._v(" ajax轮询（短轮询）")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("短轮询")]),v._v(" "),_("p",[v._v("让浏览器隔个几秒钟就发送一次请求，询问服务器是否有新的信息，服务器收到后无论是否有数据都立即返回。")]),v._v(" "),_("ul",[_("li",[v._v("客户端：啦啦啦，有没有新信息("),_("code",[v._v("Request")]),v._v(")")]),v._v(" "),_("li",[v._v("服务端：没有（"),_("code",[v._v("Response")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：啦啦啦，有没有新信息("),_("code",[v._v("Request")]),v._v(")")]),v._v(" "),_("li",[v._v("服务端：没有。。（"),_("code",[v._v("Response")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：啦啦啦，有没有新信息("),_("code",[v._v("Request")]),v._v(")")]),v._v(" "),_("li",[v._v("服务端：你好烦啊，没有啊。。（"),_("code",[v._v("Response")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：啦啦啦，有没有新消息（"),_("code",[v._v("Request")]),v._v("）")]),v._v(" "),_("li",[v._v("服务端：好啦好啦，有啦给你。（"),_("code",[v._v("Response")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：啦啦啦，有没有新消息（"),_("code",[v._v("Request")]),v._v("）")]),v._v(" "),_("li",[v._v("服务端：。。。。。没。。。。没。。。没有（"),_("code",[v._v("Response")]),v._v("） ---- loop")])])]),v._v(" "),_("h3",{attrs:{id:"long-polling-长轮询"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#long-polling-长轮询"}},[v._v("#")]),v._v(" long polling（长轮询）")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("长轮询")]),v._v(" "),_("p",[v._v("和"),_("code",[v._v("ajax")]),v._v("轮询原理差不多，都是采用轮询的方式，不过采取的是阻塞模型（一直打电话，没收到就不挂电话），也就是说，浏览器发起链接，服务器收到请求后，若有数据，则立即返回。若无数据则保持到有数据或超时后返回。浏览器收到响应后立即重新发送相同的请求。")]),v._v(" "),_("ul",[_("li",[v._v("客户端：啦啦啦，有没有新信息，没有的话就等有了才返回给我吧（"),_("code",[v._v("Request")]),v._v("）")]),v._v(" "),_("li",[v._v("服务端：额。。   等待到有消息的时候。。来 给你（"),_("code",[v._v("Response")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：啦啦啦，有没有新信息，没有的话就等有了才返回给我吧（"),_("code",[v._v("Request")]),v._v("） -loop")])])]),v._v(" "),_("h3",{attrs:{id:"小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[v._v("#")]),v._v(" 小结")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("总结")]),v._v(" "),_("p",[v._v("所以，其实这两种方式都是在不断的建立"),_("code",[v._v("HTTP")]),v._v("链接，然后等待服务器端处理，可以体现"),_("code",[v._v("HTTP")]),v._v("协议的另外一个特性："),_("em",[v._v("被动性")])]),v._v(" "),_("p",[v._v("什么是被动性：服务器端不能主动联系客户端，只有等客户端发起；")]),v._v(" "),_("p",[_("em",[v._v("缺陷：")])]),v._v(" "),_("p",[v._v("以上两种方式不管怎么样，都是非常消耗资源的；\n"),_("code",[v._v("ajax")]),v._v("轮询 ：需要服务器有很快的处理速度和 资源（速度）\n"),_("code",[v._v("long polling")]),v._v("： 需要有很高的并发，也就是说同时接待客户的能力（场地大小）\n所以以上两种方式都有可能出现如下的情况：")]),v._v(" "),_("ul",[_("li",[v._v("客户端：啦啦啦啦，有新信息么？")]),v._v(" "),_("li",[v._v("服务端：月线正忙，请稍后再试（"),_("code",[v._v("503 Server Unavailable")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：。。。。好吧，啦啦啦，有新信息么？")]),v._v(" "),_("li",[v._v("服务端：月线正忙，请稍后再试（"),_("code",[v._v("503 Server Unavailable")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端："),_("img",{attrs:{src:"https://pic3.zhimg.com/80/7c0cf075c7ee4cc6cf52f4572a4c1c10_hd.jpg"}})]),v._v(" "),_("li",[v._v("然后服务端在一旁忙的要死：冰箱，我要更多的冰箱！更多。。更多。。（我错了。。这又是梗。。）")])])]),v._v(" "),_("h2",{attrs:{id:"长连接和短连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#长连接和短连接"}},[v._v("#")]),v._v(" 长连接和短连接")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("本质上是"),_("code",[v._v("TCP")]),v._v("的长连接与短连接，"),_("code",[v._v("HTTP1.0")]),v._v("默认短连接，"),_("code",[v._v("HTTP1.1")]),v._v("起默认长连接;")]),v._v(" "),_("ul",[_("li",[_("em",[v._v("短连接")]),v._v("：在一次"),_("code",[v._v("HTTP")]),v._v("请求响应后，本次"),_("code",[v._v("TCP")]),v._v("连接关闭。下次请求响应重新建立一个"),_("code",[v._v("TCP")]),v._v("链接。")]),v._v(" "),_("li",[_("em",[v._v("长连接")]),v._v("：在请求响应后，"),_("code",[v._v("TCP")]),v._v("链接在到达超时时间之前不会关闭，下次请求响应继续使用该"),_("code",[v._v("TCP")]),v._v("链接。")])]),v._v(" "),_("p",[_("em",[v._v("HTTP1.0通过在请求头设置"),_("code",[v._v("Connection:keep-alive")]),v._v("开启长连接，后端通过"),_("code",[v._v("Keep-Alive:timeout=20")]),v._v("来设置长连接的超时时间（秒），并且服务端也要具备"),_("code",[v._v("Keep-Alive: true")])])])]),v._v(" "),_("h2",{attrs:{id:"websocket"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[v._v("#")]),v._v(" websocket")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("websocket")]),v._v(" "),_("p",[v._v("通过上面的例子，我们可以看出，这两种都不是最好的方式，需要很多的资源，一种需要更快的速度，一种需要更多的'场地'，这两种都会导致'场地'的需求会越来越高；\n还有"),_("code",[v._v("HTTP")]),v._v("是一个无状态的协议，通俗的来说就是，服务器因为每天要接待很多个客户，是个健忘的人，你一断了请求，他就把你的东西全忘光了，你第二次还得再告诉服务器一遍；")]),v._v(" "),_("p",[v._v("所以在这种情况下，websocket出现了。它解决了"),_("code",[v._v("HTTP")]),v._v("的几个难题")]),v._v(" "),_("p",[v._v("1、被动性，当服务器完成协议升级后（"),_("code",[v._v("HTTP->Websocket")]),v._v("），服务端就可以主动推送信息给客户端，场景可以做如下修改")]),v._v(" "),_("ul",[_("li",[v._v("客户端：啦啦啦，我要建立"),_("code",[v._v("Websocket")]),v._v("协议，需要的服务："),_("code",[v._v("chat")]),v._v("，"),_("code",[v._v("Websocket")]),v._v("协议版本：17（"),_("code",[v._v("HTTP Request")]),v._v("）")]),v._v(" "),_("li",[v._v("服务端：ok，确认，已升级为"),_("code",[v._v("Websocket")]),v._v("协议（"),_("code",[v._v("HTTP Protocols Switched")]),v._v("）")]),v._v(" "),_("li",[v._v("客户端：麻烦你有信息的时候推送给我噢。。")]),v._v(" "),_("li",[v._v("服务端：ok，有的时候会告诉你的。")]),v._v(" "),_("li",[v._v("服务端：balabalabalabala")]),v._v(" "),_("li",[v._v("服务端：哈哈哈哈哈啊哈哈哈哈")]),v._v(" "),_("li",[v._v("服务端：笑死我了哈哈哈哈哈哈哈")])]),v._v(" "),_("p",[v._v("这样的话只需要经过一次"),_("code",[v._v("HTTP")]),v._v("请求，就可以做到源源不断的信息传送了，这样的协议解决了同步有延迟，而且还非常消耗资源的情况")]),v._v(" "),_("p",[v._v("那"),_("code",[v._v("websocket")]),v._v("是怎么解决服务器上消耗资源的问题呢？")]),v._v(" "),_("p",[v._v("其实我们所用的程序是要经过两层代理的，即"),_("code",[v._v("HTTP")]),v._v("协议在"),_("code",[v._v("Nginx")]),v._v("等服务器的解析下，然后再传送给响应的"),_("code",[v._v("handler")]),v._v("（"),_("code",[v._v("PHP")]),v._v("等）来处理。简单的说，我们有一个非常快速的接线员（"),_("code",[v._v("Nginx")]),v._v("），他负责把问题转交给响应的客服（"),_("code",[v._v("Handler")]),v._v("）。\n本身接线员基本上速度是足够的，但是每次都卡在客服（"),_("code",[v._v("handler")]),v._v("）了，老师有客服处理速度太慢。导致客服不够，"),_("code",[v._v("websocket")]),v._v("就解决了这样一个难题，建立后，可以直接跟接线员建立持久链接，有信息的时候客服想办法通知接线员，然后接线员再统一交给客户。这样就解决了客服处理速度过慢的问题了。")])])])}),[],!1,null,null,null);_.default=o.exports}}]);