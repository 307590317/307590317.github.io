(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{352:function(v,_,e){"use strict";e.r(_);var t=e(25),s=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#判断输入url是否有效"}},[v._v("判断输入URL是否有效")])]),_("li",[_("a",{attrs:{href:"#根据url判断浏览器缓存"}},[v._v("根据URL判断浏览器缓存")])]),_("li",[_("a",{attrs:{href:"#解析域名对应的ip地址"}},[v._v("解析域名对应的IP地址")])]),_("li",[_("a",{attrs:{href:"#建立tcp链接"}},[v._v("建立TCP链接")])]),_("li",[_("a",{attrs:{href:"#流程"}},[v._v("流程")])])])]),_("p"),v._v(" "),_("h1",{attrs:{id:"从输入ulr到看到页面-中间经历了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从输入ulr到看到页面-中间经历了什么"}},[v._v("#")]),v._v(" 从输入ULR到看到页面，中间经历了什么？")]),v._v(" "),_("p",[v._v("主要分为三个阶段(请求"),_("code",[v._v("request")]),v._v("、响应"),_("code",[v._v("response")]),v._v("、渲染"),_("code",[v._v("dom render")]),v._v(")；")]),v._v(" "),_("h2",{attrs:{id:"判断输入url是否有效"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#判断输入url是否有效"}},[v._v("#")]),v._v(" 判断输入URL是否有效")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("URL判断")]),v._v(" "),_("p",[v._v("首先会对"),_("code",[v._v("URL")]),v._v("进行解析，判断"),_("code",[v._v("URL")]),v._v("中的协议或主机名是否合法，如果不合法，将会把输入的内容传递给搜索引擎。如果没问题则进行下一步；")])]),v._v(" "),_("h2",{attrs:{id:"根据url判断浏览器缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#根据url判断浏览器缓存"}},[v._v("#")]),v._v(" 根据URL判断浏览器缓存")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("浏览器缓存")]),v._v(" "),_("p",[v._v("会根据URL查找浏览器缓存，如果有强缓存而且没过期，则直接使用强缓存的内容。如果没有强缓存或者强缓存过期，则进行下一步，开始解析域名，建立TCP连接，进行协商缓存。")])]),v._v(" "),_("h2",{attrs:{id:"解析域名对应的ip地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解析域名对应的ip地址"}},[v._v("#")]),v._v(" 解析域名对应的IP地址")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("解析URL")]),v._v(" "),_("p",[_("code",[v._v("DNS")]),v._v("解析步骤如下")]),v._v(" "),_("ul",[_("li",[v._v("首先会从浏览器缓存中查找是否有这个网址对应的"),_("code",[v._v("IP")]),v._v("地址（没有就下一步）")]),v._v(" "),_("li",[v._v("再到当前操作系统中的"),_("code",[v._v("DNS缓存(hosts文件)")]),v._v("中查找")]),v._v(" "),_("li",[v._v("继续向路由的"),_("code",[v._v("DNS")]),v._v("缓存中查找")]),v._v(" "),_("li",[v._v("没有继续向"),_("code",[v._v("ISP（当地网络接入商）")]),v._v("提供的本地"),_("code",[v._v("DNS")]),v._v("服务器缓存中查找")])]),v._v(" "),_("p",[v._v("所以"),_("code",[v._v("IP")]),v._v("的查找顺序就是 "),_("code",[v._v("浏览器 -> 系统 -> 路由器 -> 本地DNS服务器")]),v._v("（递归查询，没有找到就代上一级继续查找，直到找到结果为止）。如果在某一个缓存中找到就直接进入下一步。如果没有找到就会向本地"),_("code",[v._v("DNS")]),v._v("服务器发送"),_("code",[v._v("DNS")]),v._v("查找请求。\n"),_("img",{attrs:{src:v.$withBase("/assets/browser-9-dns.png"),alt:"browser-9-dns"}}),v._v("\n客户端向本地"),_("code",[v._v("DNS")]),v._v("服务器发送查找请求到返回结果也是 "),_("strong",[_("code",[v._v("递归查询")])]),v._v("（收到请求，给出查询出的"),_("code",[v._v("IP")]),v._v("结果）")]),v._v(" "),_("p",[v._v("本地"),_("code",[v._v("DNS")]),v._v("服务器向其他服务器发送查找请求，收到其他服务器给出另一个"),_("code",[v._v("DNS")]),v._v("服务器地址，然后本地"),_("code",[v._v("DNS")]),v._v("服务器再向最新给到的"),_("code",[v._v("DNS")]),v._v("服务器地址发出请求，直到返回查询的"),_("code",[v._v("IP")]),v._v("地址为止，这个过程是 "),_("strong",[_("code",[v._v("迭代查询")])]),v._v("（收到请求，如果不是最终对应的"),_("code",[v._v("IP")]),v._v("则继续查找，直到找到对应"),_("code",[v._v("IP")]),v._v("为止）")]),v._v(" "),_("p",[v._v("本地"),_("code",[v._v("DNS")]),v._v("服务器把"),_("code",[v._v("IP")]),v._v("地址发送给用户，并把对应关系缓存起来，以便备查，然后进入下一步\n"),_("img",{attrs:{src:v.$withBase("/assets/browser-dnsParse.jpeg"),alt:"browser-dnsParse"}})])]),v._v(" "),_("h2",{attrs:{id:"建立tcp链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#建立tcp链接"}},[v._v("#")]),v._v(" 建立TCP链接")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("三次握手")]),v._v(" "),_("p",[v._v("通过找到的外网"),_("code",[v._v("IP")]),v._v("，开始建立"),_("code",[v._v("TCP")]),v._v("链接（三次握手）")]),v._v(" "),_("ul",[_("li",[v._v("5、建立链接后，客户端开始发送"),_("code",[v._v("HTTP")]),v._v("请求；")])]),v._v(" "),_("p",[_("em",[v._v("["),_("code",[v._v("Response")]),v._v("响应阶段]")])]),v._v(" "),_("ul",[_("li",[v._v("6、服务器开始处理请求，根据端口号和文件路径（没输入是因为不同协议有自己不同的默认端口号）找到服务器上对应的项目，并把项目源码通过"),_("code",[v._v("HTTP")]),v._v("等协议返回给客户端；")]),v._v(" "),_("li",[v._v("7、断开"),_("code",[v._v("TCP")]),v._v("链接四次挥手")])]),v._v(" "),_("p",[_("em",[v._v("[浏览器渲染阶段]")])]),v._v(" "),_("ul",[_("li",[v._v("8、客户端接收到源代码后，会交给浏览器的内核进行渲染，最后由浏览器绘制出对应的页面\n"),_("ul",[_("li",[v._v("首先渲染进程解析"),_("code",[v._v("HTML")]),v._v("，计算"),_("code",[v._v("DOM")]),v._v("结构，生成"),_("code",[v._v("DOM Tree")]),v._v("。")]),v._v(" "),_("li",[v._v("渲染进程解析"),_("code",[v._v("CSS")]),v._v("资源，生成"),_("code",[v._v("Style Rules")]),v._v("；")]),v._v(" "),_("li",[v._v("当解析遇到"),_("code",[v._v("script")]),v._v("标签的 时候，会停止解析文档，开始解析脚本，会将脚本中改变"),_("code",[v._v("DOM")]),v._v("和"),_("code",[v._v("CSS")]),v._v("的地方解析出来，追加到"),_("code",[v._v("DOM Tree")]),v._v("和"),_("code",[v._v("style rules")]),v._v("上；")]),v._v(" "),_("li",[_("code",[v._v("DOM Ttree")]),v._v(" 结合"),_("code",[v._v("Style rules")]),v._v(" 生成"),_("code",[v._v("render Tree")]),v._v("；")]),v._v(" "),_("li",[v._v("根据"),_("code",[v._v("render Tree")]),v._v("开始布局和绘制页面；")])])])])]),v._v(" "),_("h2",{attrs:{id:"流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[v._v("#")]),v._v(" 流程")]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("ul",[_("li",[v._v("1、根据协议域名判断是否合法")]),v._v(" "),_("li",[v._v("2、根据URL在浏览器中查找缓存，查看是否有缓存，并且缓存是否过期，如果有缓存并且没有失效，则直接使用缓存。浏览器返回200 灰色。如果已过期，则开始发送请求进行协商缓存过程。")]),v._v(" "),_("li",[v._v("3、DNS解析：\n"),_("ul",[_("li",[v._v("递   1、从浏览器缓存找对应IP地址。")]),v._v(" "),_("li",[v._v("归   2、从系统host查找对应IP")]),v._v(" "),_("li",[v._v("查   3、从路由的DNS缓存查找IP地址")]),v._v(" "),_("li",[v._v("找   4、向本地DNS服务器发起查找")]),v._v(" "),_("li",[v._v("本地DNS服务器->向其他域名服务器发起查找  (迭代查询)")]),v._v(" "),_("li",[v._v("最后返回IP地址，本地DNS服务器将IP发送给用户，并把对应关系缓存起来，以便下次查找。")])])]),v._v(" "),_("li",[v._v("4、用户拿到IP之后，开始建立TCP连接，3次握手之后连接建立（如果是HTTPS协议则会进行TSL的四次握手过程）")]),v._v(" "),_("li",[v._v("5、开始发送请求，进行协商缓存，如果上次的响应头中带有"),_("code",[v._v("last-Modinfy")]),v._v(" 字段，请求头就会带上"),_("code",[v._v("If-modified-Since")]),v._v("字段，如果有"),_("code",[v._v("Etag")]),v._v("字段，请求头就会带上"),_("code",[v._v("If-None-Macth")]),v._v("字段，"),_("code",[v._v("If-None-Macth")]),v._v("字段优先。两者来决定协商缓存的结果。")]),v._v(" "),_("li",[v._v("6、返回304采用缓存，返回200和新的数据。")]),v._v(" "),_("li",[v._v("7、四次挥手断开连接")]),v._v(" "),_("li",[v._v("8、浏览器拿到HTML之后，开始解析HTML构建DOM树，遇到CSS，异步下载并解析CSS构建styleRule。遇到script标签(不带defer、async)会停止HTML的解析，开始下载并执行脚本。直到执行完成后，继续解析HTML脚本")]),v._v(" "),_("li",[v._v("9、合并DOM tree 和styleRule，生成render tree。")]),v._v(" "),_("li",[v._v("10、根据render tree 进行布局（重绘和回流）")]),v._v(" "),_("li",[v._v("11、绘制页面像素信息，发给GPU，由GUP最终展示到屏幕上")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);